(()=>{var e={9669:(e,t,n)=>{e.exports=n(1609)},5448:(e,t,n)=>{"use strict";var r=n(4867),a=n(6026),o=n(4372),l=n(5327),i=n(4097),u=n(4109),s=n(7985),c=n(7874),f=n(2648),d=n(644),p=n(205);e.exports=function(e){return new Promise((function(t,n){var h,m=e.data,g=e.headers,v=e.responseType;function y(){e.cancelToken&&e.cancelToken.unsubscribe(h),e.signal&&e.signal.removeEventListener("abort",h)}r.isFormData(m)&&r.isStandardBrowserEnv()&&delete g["Content-Type"];var b=new XMLHttpRequest;if(e.auth){var A=e.auth.username||"",C=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";g.Authorization="Basic "+btoa(A+":"+C)}var w=i(e.baseURL,e.url);function k(){if(b){var r="getAllResponseHeaders"in b?u(b.getAllResponseHeaders()):null,o={data:v&&"text"!==v&&"json"!==v?b.response:b.responseText,status:b.status,statusText:b.statusText,headers:r,config:e,request:b};a((function(e){t(e),y()}),(function(e){n(e),y()}),o),b=null}}if(b.open(e.method.toUpperCase(),l(w,e.params,e.paramsSerializer),!0),b.timeout=e.timeout,"onloadend"in b?b.onloadend=k:b.onreadystatechange=function(){b&&4===b.readyState&&(0!==b.status||b.responseURL&&0===b.responseURL.indexOf("file:"))&&setTimeout(k)},b.onabort=function(){b&&(n(new f("Request aborted",f.ECONNABORTED,e,b)),b=null)},b.onerror=function(){n(new f("Network Error",f.ERR_NETWORK,e,b,b)),b=null},b.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||c;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new f(t,r.clarifyTimeoutError?f.ETIMEDOUT:f.ECONNABORTED,e,b)),b=null},r.isStandardBrowserEnv()){var E=(e.withCredentials||s(w))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;E&&(g[e.xsrfHeaderName]=E)}"setRequestHeader"in b&&r.forEach(g,(function(e,t){void 0===m&&"content-type"===t.toLowerCase()?delete g[t]:b.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(b.withCredentials=!!e.withCredentials),v&&"json"!==v&&(b.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&b.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&b.upload&&b.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(h=function(e){b&&(n(!e||e&&e.type?new d:e),b.abort(),b=null)},e.cancelToken&&e.cancelToken.subscribe(h),e.signal&&(e.signal.aborted?h():e.signal.addEventListener("abort",h))),m||(m=null);var x=p(w);x&&-1===["http","https","file"].indexOf(x)?n(new f("Unsupported protocol "+x+":",f.ERR_BAD_REQUEST,e)):b.send(m)}))}},1609:(e,t,n)=>{"use strict";var r=n(4867),a=n(1849),o=n(321),l=n(7185);var i=function e(t){var n=new o(t),i=a(o.prototype.request,n);return r.extend(i,o.prototype,n),r.extend(i,n),i.create=function(n){return e(l(t,n))},i}(n(5546));i.Axios=o,i.CanceledError=n(644),i.CancelToken=n(4972),i.isCancel=n(6502),i.VERSION=n(7288).version,i.toFormData=n(7675),i.AxiosError=n(2648),i.Cancel=i.CanceledError,i.all=function(e){return Promise.all(e)},i.spread=n(8713),i.isAxiosError=n(6268),e.exports=i,e.exports.default=i},4972:(e,t,n)=>{"use strict";var r=n(644);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,r=n._listeners.length;for(t=0;t<r;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},a.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},a.source=function(){var e;return{token:new a((function(t){e=t})),cancel:e}},e.exports=a},644:(e,t,n)=>{"use strict";var r=n(2648);function a(e){r.call(this,null==e?"canceled":e,r.ERR_CANCELED),this.name="CanceledError"}n(4867).inherits(a,r,{__CANCEL__:!0}),e.exports=a},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(4867),a=n(5327),o=n(782),l=n(3572),i=n(7185),u=n(4097),s=n(4875),c=s.validators;function f(e){this.defaults=e,this.interceptors={request:new o,response:new o}}f.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=i(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var n=t.transitional;void 0!==n&&s.assertOptions(n,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var r=[],a=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(a=a&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var o,u=[];if(this.interceptors.response.forEach((function(e){u.push(e.fulfilled,e.rejected)})),!a){var f=[l,void 0];for(Array.prototype.unshift.apply(f,r),f=f.concat(u),o=Promise.resolve(t);f.length;)o=o.then(f.shift(),f.shift());return o}for(var d=t;r.length;){var p=r.shift(),h=r.shift();try{d=p(d)}catch(e){h(e);break}}try{o=l(d)}catch(e){return Promise.reject(e)}for(;u.length;)o=o.then(u.shift(),u.shift());return o},f.prototype.getUri=function(e){e=i(this.defaults,e);var t=u(e.baseURL,e.url);return a(t,e.params,e.paramsSerializer)},r.forEach(["delete","get","head","options"],(function(e){f.prototype[e]=function(t,n){return this.request(i(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){function t(t){return function(n,r,a){return this.request(i(a||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:r}))}}f.prototype[e]=t(),f.prototype[e+"Form"]=t(!0)})),e.exports=f},2648:(e,t,n)=>{"use strict";var r=n(4867);function a(e,t,n,r,a){Error.call(this),this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),r&&(this.request=r),a&&(this.response=a)}r.inherits(a,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var o=a.prototype,l={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach((function(e){l[e]={value:e}})),Object.defineProperties(a,l),Object.defineProperty(o,"isAxiosError",{value:!0}),a.from=function(e,t,n,l,i,u){var s=Object.create(o);return r.toFlatObject(e,s,(function(e){return e!==Error.prototype})),a.call(s,e.message,t,n,l,i),s.name=e.name,u&&Object.assign(s,u),s},e.exports=a},782:(e,t,n)=>{"use strict";var r=n(4867);function a(){this.handlers=[]}a.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=a},4097:(e,t,n)=>{"use strict";var r=n(1793),a=n(7303);e.exports=function(e,t){return e&&!r(t)?a(e,t):t}},3572:(e,t,n)=>{"use strict";var r=n(4867),a=n(8527),o=n(6502),l=n(5546),i=n(644);function u(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new i}e.exports=function(e){return u(e),e.headers=e.headers||{},e.data=a.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||l.adapter)(e).then((function(t){return u(e),t.data=a.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(u(e),t&&t.response&&(t.response.data=a.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},7185:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){t=t||{};var n={};function a(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function o(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:a(void 0,e[n]):a(e[n],t[n])}function l(e){if(!r.isUndefined(t[e]))return a(void 0,t[e])}function i(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:a(void 0,e[n]):a(void 0,t[n])}function u(n){return n in t?a(e[n],t[n]):n in e?a(void 0,e[n]):void 0}var s={url:l,method:l,data:l,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:u};return r.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=s[e]||o,a=t(e);r.isUndefined(a)&&t!==u||(n[e]=a)})),n}},6026:(e,t,n)=>{"use strict";var r=n(2648);e.exports=function(e,t,n){var a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new r("Request failed with status code "+n.status,[r.ERR_BAD_REQUEST,r.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}},8527:(e,t,n)=>{"use strict";var r=n(4867),a=n(5546);e.exports=function(e,t,n){var o=this||a;return r.forEach(n,(function(n){e=n.call(o,e,t)})),e}},5546:(e,t,n)=>{"use strict";var r=n(4867),a=n(6016),o=n(2648),l=n(7874),i=n(7675),u={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,f={transitional:l,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=n(5448)),c),transformRequest:[function(e,t){if(a(t,"Accept"),a(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e))return e;if(r.isArrayBufferView(e))return e.buffer;if(r.isURLSearchParams(e))return s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString();var n,o=r.isObject(e),l=t&&t["Content-Type"];if((n=r.isFileList(e))||o&&"multipart/form-data"===l){var u=this.env&&this.env.FormData;return i(n?{"files[]":e}:e,u&&new u)}return o||"application/json"===l?(s(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(t||JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||f.transitional,n=t&&t.silentJSONParsing,a=t&&t.forcedJSONParsing,l=!n&&"json"===this.responseType;if(l||a&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(l){if("SyntaxError"===e.name)throw o.from(e,o.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:n(1623)},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){f.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){f.headers[e]=r.merge(u)})),e.exports=f},7874:e=>{"use strict";e.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},7288:e=>{e.exports={version:"0.27.2"}},1849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},5327:(e,t,n)=>{"use strict";var r=n(4867);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(r.isURLSearchParams(t))o=t.toString();else{var l=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),l.push(a(t)+"="+a(e))})))})),o=l.join("&")}if(o){var i=e.indexOf("#");-1!==i&&(e=e.slice(0,i)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},7303:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},4372:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,a,o,l){var i=[];i.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&i.push("expires="+new Date(n).toGMTString()),r.isString(a)&&i.push("path="+a),r.isString(o)&&i.push("domain="+o),!0===l&&i.push("secure"),document.cookie=i.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},6268:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},7985:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function a(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=a(window.location.href),function(t){var n=r.isString(t)?a(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},6016:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},1623:e=>{e.exports=null},4109:(e,t,n)=>{"use strict";var r=n(4867),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,l={};return e?(r.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),n=r.trim(e.substr(o+1)),t){if(l[t]&&a.indexOf(t)>=0)return;l[t]="set-cookie"===t?(l[t]?l[t]:[]).concat([n]):l[t]?l[t]+", "+n:n}})),l):l}},205:e=>{"use strict";e.exports=function(e){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}},8713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},7675:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){t=t||new FormData;var n=[];function a(e){return null===e?"":r.isDate(e)?e.toISOString():r.isArrayBuffer(e)||r.isTypedArray(e)?"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}return function e(o,l){if(r.isPlainObject(o)||r.isArray(o)){if(-1!==n.indexOf(o))throw Error("Circular reference detected in "+l);n.push(o),r.forEach(o,(function(n,o){if(!r.isUndefined(n)){var i,u=l?l+"."+o:o;if(n&&!l&&"object"==typeof n)if(r.endsWith(o,"{}"))n=JSON.stringify(n);else if(r.endsWith(o,"[]")&&(i=r.toArray(n)))return void i.forEach((function(e){!r.isUndefined(e)&&t.append(u,a(e))}));e(n,u)}})),n.pop()}else t.append(l,a(o))}(e),t}},4875:(e,t,n)=>{"use strict";var r=n(7288).version,a=n(2648),o={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){o[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var l={};o.transitional=function(e,t,n){function o(e,t){return"[Axios v"+r+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,r,i){if(!1===e)throw new a(o(r," has been removed"+(t?" in "+t:"")),a.ERR_DEPRECATED);return t&&!l[r]&&(l[r]=!0,console.warn(o(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,i)}},e.exports={assertOptions:function(e,t,n){if("object"!=typeof e)throw new a("options must be an object",a.ERR_BAD_OPTION_VALUE);for(var r=Object.keys(e),o=r.length;o-- >0;){var l=r[o],i=t[l];if(i){var u=e[l],s=void 0===u||i(u,l,e);if(!0!==s)throw new a("option "+l+" must be "+s,a.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new a("Unknown option "+l,a.ERR_BAD_OPTION)}},validators:o}},4867:(e,t,n)=>{"use strict";var r,a=n(1849),o=Object.prototype.toString,l=(r=Object.create(null),function(e){var t=o.call(e);return r[t]||(r[t]=t.slice(8,-1).toLowerCase())});function i(e){return e=e.toLowerCase(),function(t){return l(t)===e}}function u(e){return Array.isArray(e)}function s(e){return void 0===e}var c=i("ArrayBuffer");function f(e){return null!==e&&"object"==typeof e}function d(e){if("object"!==l(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var p=i("Date"),h=i("File"),m=i("Blob"),g=i("FileList");function v(e){return"[object Function]"===o.call(e)}var y=i("URLSearchParams");function b(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),u(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}var A,C=(A="undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(e){return A&&e instanceof A});e.exports={isArray:u,isArrayBuffer:c,isBuffer:function(e){return null!==e&&!s(e)&&null!==e.constructor&&!s(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){var t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||o.call(e)===t||v(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&c(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:f,isPlainObject:d,isUndefined:s,isDate:p,isFile:h,isBlob:m,isFunction:v,isStream:function(e){return f(e)&&v(e.pipe)},isURLSearchParams:y,isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:b,merge:function e(){var t={};function n(n,r){d(t[r])&&d(n)?t[r]=e(t[r],n):d(n)?t[r]=e({},n):u(n)?t[r]=n.slice():t[r]=n}for(var r=0,a=arguments.length;r<a;r++)b(arguments[r],n);return t},extend:function(e,t,n){return b(t,(function(t,r){e[r]=n&&"function"==typeof t?a(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,n,r){e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,n&&Object.assign(e.prototype,n)},toFlatObject:function(e,t,n){var r,a,o,l={};t=t||{};do{for(a=(r=Object.getOwnPropertyNames(e)).length;a-- >0;)l[o=r[a]]||(t[o]=e[o],l[o]=!0);e=Object.getPrototypeOf(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:l,kindOfTest:i,endsWith:function(e,t,n){e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;var r=e.indexOf(t,n);return-1!==r&&r===n},toArray:function(e){if(!e)return null;var t=e.length;if(s(t))return null;for(var n=new Array(t);t-- >0;)n[t]=e[t];return n},isTypedArray:C,isFileList:g}},1093:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7537),a=n.n(r),o=n(3645),l=n.n(o)()(a());l.push([e.id,".efOKq8lGg80MaQSNcs0F{width:1200px;margin:0 auto}@media screen and (max-width: 600px){.efOKq8lGg80MaQSNcs0F{width:auto}}.MQli88TStumNWFVVfp89{font-size:24px;border-bottom:.5px solid #707070;color:#707070;text-align:center}.pyOEPZrIcH8mijZjNAjz{margin-top:40px}.pyOEPZrIcH8mijZjNAjz .b4QxpC_Y_GNNvGEKwOva{color:#707070;padding-left:8px;font-size:20px;border-left:5px solid #3cc;letter-spacing:.8px}@media screen and (max-width: 600px){.MQli88TStumNWFVVfp89{font-size:20px}.pyOEPZrIcH8mijZjNAjz{margin-top:20px}.pyOEPZrIcH8mijZjNAjz .b4QxpC_Y_GNNvGEKwOva{font-size:16px}}.VXv69VF2hvWoOUTUZReI{background-color:rgba(0,0,0,.5);color:#fff;font-size:14px;width:500px;height:30px;display:flex;align-items:center;margin:0 auto;position:fixed;z-index:1;border-radius:10px;justify-content:space-around;left:50%;transform:translate(-50%, -50%)}@media screen and (max-width: 600px){.VXv69VF2hvWoOUTUZReI{font-size:12px;width:100%}}.euH8GKBhCR6ctB9_3Iqh{padding-bottom:40px;border-bottom:.5px solid #707070;box-sizing:border-box;display:flex}.euH8GKBhCR6ctB9_3Iqh .mZcyROCiUBoOIbKYvFEv{position:relative;padding:10px;border:1px solid #707070;border-radius:10px;font-size:16px;width:540px;height:330px;box-sizing:border-box}.euH8GKBhCR6ctB9_3Iqh .mZcyROCiUBoOIbKYvFEv textarea{font-size:16px;margin:0;padding:0;border:none;width:100%;height:100%;resize:none}.euH8GKBhCR6ctB9_3Iqh .mZcyROCiUBoOIbKYvFEv textarea::placeholder{color:#bcbcbc}.euH8GKBhCR6ctB9_3Iqh .mZcyROCiUBoOIbKYvFEv textarea:focus{outline:none}.euH8GKBhCR6ctB9_3Iqh .nl27_SjWClYb7rNZVoFw{margin:127px 20px 0;width:70px;height:76px}.euH8GKBhCR6ctB9_3Iqh .qLrNjrJWCZst3Tq2yriD{position:relative;padding:10px;border:1px solid #707070;border-radius:10px;font-size:16px;width:540px;height:330px;box-sizing:border-box}.euH8GKBhCR6ctB9_3Iqh .qLrNjrJWCZst3Tq2yriD .dbpoIrkpdcYMjp3Lko1i{color:#bcbcbc;margin:0}.euH8GKBhCR6ctB9_3Iqh .qLrNjrJWCZst3Tq2yriD .Q27gCDIfoxUrRYMKqgtL{opacity:0}@media screen and (max-width: 600px){.euH8GKBhCR6ctB9_3Iqh{flex-direction:column}.euH8GKBhCR6ctB9_3Iqh .mZcyROCiUBoOIbKYvFEv,.euH8GKBhCR6ctB9_3Iqh .qLrNjrJWCZst3Tq2yriD{width:auto;height:200px}.euH8GKBhCR6ctB9_3Iqh .nl27_SjWClYb7rNZVoFw{margin:10px auto;transform:rotate(90deg);width:30px;height:36px}}.KfgPJuuZUmnygv2Zpcm1{position:absolute;bottom:10px;right:10px;background-color:#fff;border:1px solid #707070;color:#3cc;border-radius:10px;display:flex;flex-direction:column;align-items:center;justify-content:center;width:60px;height:60px}.KfgPJuuZUmnygv2Zpcm1 small{display:block;margin-top:5px;font-size:12px}@media(hover: hover){.KfgPJuuZUmnygv2Zpcm1:hover{opacity:.5}}@media screen and (max-width: 600px){.KfgPJuuZUmnygv2Zpcm1{width:50px;height:50px}}.EM7TrywmuaZzbdCOfzi9{display:flex;margin-top:12px}.EM7TrywmuaZzbdCOfzi9 input{display:none}.EM7TrywmuaZzbdCOfzi9 input:checked+span{background-color:#3cc;color:#fff}.EM7TrywmuaZzbdCOfzi9 span{border:2px solid #3cc;border-radius:10px;width:86px;height:26px;color:#3cc;display:flex;align-items:center;justify-content:center;font-weight:bold}.zOffHoITxfIQP82O0eQc{font-size:16px;font-style:oblique;color:#707070;line-height:26px;letter-spacing:.4px}.i8apdQ7LI3op1eWbbkGy{margin:5px 0 0}.i8apdQ7LI3op1eWbbkGy a{font-size:14px;color:#3cc}@media screen and (max-width: 600px){.zOffHoITxfIQP82O0eQc{font-size:14px}.i8apdQ7LI3op1eWbbkGy{font-size:12px}}.b6dM2HQgGjwc5Asa8JdR{width:100%;border-collapse:collapse;font-size:16px}.b6dM2HQgGjwc5Asa8JdR tr td{letter-spacing:.8px;height:40px;border:.5px solid #707070;text-align:center;padding:0;color:#000}.b6dM2HQgGjwc5Asa8JdR tr td:nth-last-of-type(even){color:#707070;background-color:#efefef}.b6dM2HQgGjwc5Asa8JdR .hwWmj65k8qDBCTJ6YXqZ{font-weight:bold;background-color:#3cc;color:#fff;text-align:center}@media screen and (max-width: 600px){.b6dM2HQgGjwc5Asa8JdR{font-size:14px}.b6dM2HQgGjwc5Asa8JdR .hwWmj65k8qDBCTJ6YXqZ{font-size:14px}}.WgVyvhNhUHkWMRZbdEra{padding-left:1rem;font-size:14px;color:#707070}.WgVyvhNhUHkWMRZbdEra li{margin-bottom:10px;line-height:22px;letter-spacing:.4px}.WgVyvhNhUHkWMRZbdEra li strong{color:#f33;font-weight:normal}.WgVyvhNhUHkWMRZbdEra p{font-size:12px;margin:0;color:#999}@media(prefers-color-scheme: dark){body{background-color:#141414}body .mZcyROCiUBoOIbKYvFEv{background-color:#141414}body .mZcyROCiUBoOIbKYvFEv textarea{background-color:#141414;color:#fff}body .qLrNjrJWCZst3Tq2yriD{color:#fff}body .KfgPJuuZUmnygv2Zpcm1{background-color:#141414}body .VXv69VF2hvWoOUTUZReI{background-color:rgba(255,255,255,.5)}body .WgVyvhNhUHkWMRZbdEra li strong{color:#f99}body .b6dM2HQgGjwc5Asa8JdR tr td{border:.5px solid #707070;color:#707070}body .b6dM2HQgGjwc5Asa8JdR tr td:nth-last-of-type(even){color:#000;background-color:#aaa}body .b6dM2HQgGjwc5Asa8JdR .hwWmj65k8qDBCTJ6YXqZ{color:#000}}","",{version:3,sources:["webpack://./src/styles/_container.scss","webpack://./src/styles/_vars.scss","webpack://./src/styles/_header.scss","webpack://./src/styles/_message.scss","webpack://./src/styles/_box.scss","webpack://./src/styles/_button.scss","webpack://./src/styles/_check.scss","webpack://./src/styles/_about.scss","webpack://./src/styles/_table.scss","webpack://./src/styles/_list.scss","webpack://./src/styles/_dark.scss"],names:[],mappings:"AACA,sBACE,YCFS,CDGT,aAAA,CCGA,qCAAA,sBDCE,UAAA,CAAA,CENJ,sBACE,cAAA,CACA,gCAAA,CACA,aDFU,CCGV,iBAAA,CAEF,sBACE,eAAA,CACA,4CACE,aDRQ,CCSR,gBAAA,CACA,cAAA,CACA,0BAAA,CACA,mBAAA,CDRF,qCCaA,sBACE,cAAA,CAEF,sBACE,eAAA,CACA,4CACE,cAAA,CAAA,CCzBN,sBACE,+BAAA,CACA,UAAA,CACA,cAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CACA,cAAA,CACA,SAAA,CACA,kBAAA,CACA,4BAAA,CACA,QAAA,CACA,+BAAA,CFRA,qCEWA,sBACE,cAAA,CACA,UAAA,CAAA,CCTJ,sBACE,mBAAA,CACA,gCAAA,CACA,qBAAA,CACA,YAAA,CACA,4CACE,iBAAA,CAdF,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CAUE,qDACE,cAAA,CACA,QAAA,CACA,SAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,kEACE,aAAA,CAEF,2DACE,YAAA,CAIN,4CACE,mBAAA,CACA,UAAA,CACA,WAAA,CAEF,4CACE,iBAAA,CAtCF,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CAkCE,kEACE,aAAA,CACA,QAAA,CAEF,kEACE,SAAA,CHzCJ,qCG+CA,sBACE,qBAAA,CACA,wFAEE,UAAA,CACA,YAAA,CAEF,4CACE,gBAAA,CACA,uBAAA,CACA,UAAA,CACA,WAAA,CAAA,CC/DN,sBACE,iBAAA,CACA,WAAA,CACA,UAAA,CACA,qBAAA,CACA,wBAAA,CACA,UJNU,CIOV,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CACA,WAAA,CACA,4BACE,aAAA,CACA,cAAA,CACA,cAAA,CAIJ,qBACE,4BACE,UAAA,CAAA,CJlBF,qCIuBA,sBACE,UAAA,CACA,WAAA,CAAA,CC9BJ,sBACE,YAAA,CACA,eAAA,CACA,4BACE,YAAA,CACA,yCACE,qBLNM,CKON,UAAA,CAGJ,2BACE,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,ULfQ,CKgBR,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CCnBJ,sBACE,cAAA,CACA,kBAAA,CACA,aNFU,CMGV,gBAAA,CACA,mBAAA,CAEF,sBACE,cAAA,CACA,wBACE,cAAA,CACA,UNXQ,CAKV,qCMUA,sBACE,cAAA,CAEF,sBACE,cAAA,CAAA,CCnBJ,sBACE,UAAA,CACA,wBAAA,CACA,cAAA,CACA,4BACE,mBAAA,CACA,WAAA,CACA,yBAAA,CACA,iBAAA,CACA,SAAA,CACA,UAAA,CACA,mDACE,aPXM,COYN,wBAAA,CAGJ,4CACE,gBAAA,CACA,qBPlBQ,COmBR,UAAA,CACA,iBAAA,CPfF,qCOmBA,sBACE,cAAA,CACA,4CACE,cAAA,CAAA,CC3BN,sBACE,iBAAA,CACA,cAAA,CACA,aRFU,CQGV,yBACE,kBAAA,CACA,gBAAA,CACA,mBAAA,CACA,gCACE,UAAA,CACA,kBAAA,CAGJ,wBACE,cAAA,CACA,QAAA,CACA,URda,CSDjB,mCACE,KACE,wBAJQ,CAKR,2BACE,wBANM,CAON,oCACE,wBARI,CASJ,UAAA,CAGJ,2BACE,UAAA,CAEF,2BACE,wBAhBM,CAkBR,2BACE,qCAAA,CAEF,qCACE,UAAA,CAGA,iCACE,yBAAA,CACA,aTzBI,CS0BJ,wDACE,UAAA,CACA,qBAAA,CAGJ,iDACE,UAAA,CAAA",sourcesContent:['@import "./vars";\n.container {\n  width: $maxWidth;\n  margin: 0 auto;\n}\n@include mobile() {\n  .container {\n    width: auto;\n  }\n}\n',"$maxWidth: 1200px;\n$mainColor: #33cccc;\n$greyColor: #707070;\n$lightGreyColor: #999999;\n\n@mixin mobile() {\n  @media screen and (max-width: 600px) {\n    @content;\n  }\n}\n",'@import "./vars";\n.header {\n  font-size: 24px;\n  border-bottom: 0.5px solid $greyColor;\n  color: $greyColor;\n  text-align: center;\n}\n.headingWrapper {\n  margin-top: 40px;\n  .heading {\n    color: $greyColor;\n    padding-left: 8px;\n    font-size: 20px;\n    border-left: 5px solid $mainColor;\n    letter-spacing: 0.8px;\n  }\n}\n\n@include mobile() {\n  .header {\n    font-size: 20px;\n  }\n  .headingWrapper {\n    margin-top: 20px;\n    .heading {\n      font-size: 16px;\n    }\n  }\n}\n',".message {\n  background-color: rgba($color: #000000, $alpha: 0.5);\n  color: #fff;\n  font-size: 14px;\n  width: 500px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  position: fixed;\n  z-index: 1;\n  border-radius: 10px;\n  justify-content: space-around;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n@include mobile() {\n  .message {\n    font-size: 12px;\n    width: 100%;\n  }\n}\n",'@import "./vars";\n@mixin box {\n  padding: 10px;\n  border: 1px solid $greyColor;\n  border-radius: 10px;\n  font-size: 16px;\n  width: 540px;\n  height: 330px;\n  box-sizing: border-box;\n}\n.boxWrapper {\n  padding-bottom: 40px;\n  border-bottom: 0.5px solid $greyColor;\n  box-sizing: border-box;\n  display: flex;\n  .left {\n    position: relative;\n    @include box();\n    textarea {\n      font-size: 16px;\n      margin: 0;\n      padding: 0;\n      border: none;\n      width: 100%;\n      height: 100%;\n      resize: none;\n      &::placeholder {\n        color: #bcbcbc;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n  .arrow {\n    margin: 127px 20px 0;\n    width: 70px;\n    height: 76px;\n  }\n  .right {\n    position: relative;\n    @include box();\n    .empty {\n      color: #bcbcbc;\n      margin: 0;\n    }\n    .none {\n      opacity: 0;\n    }\n  }\n}\n\n@include mobile() {\n  .boxWrapper {\n    flex-direction: column;\n    .left,\n    .right {\n      width: auto;\n      height: 200px;\n    }\n    .arrow {\n      margin: 10px auto;\n      transform: rotate(90deg);\n      width: 30px;\n      height: 36px;\n    }\n  }\n}\n','@import "./vars";\n.button {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  background-color: #fff;\n  border: 1px solid $greyColor;\n  color: $mainColor;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  small {\n    display: block;\n    margin-top: 5px;\n    font-size: 12px;\n  }\n}\n\n@media (hover: hover) {\n  .button:hover {\n    opacity: 0.5;\n  }\n}\n\n@include mobile() {\n  .button {\n    width: 50px;\n    height: 50px;\n  }\n}\n','@import "./vars";\n.check {\n  display: flex;\n  margin-top: 12px;\n  input {\n    display: none;\n    &:checked + span {\n      background-color: $mainColor;\n      color: #fff;\n    }\n  }\n  span {\n    border: 2px solid $mainColor;\n    border-radius: 10px;\n    width: 86px;\n    height: 26px;\n    color: $mainColor;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n}\n','@import "./vars";\n.quote {\n  font-size: 16px;\n  font-style: oblique;\n  color: $greyColor;\n  line-height: 26px;\n  letter-spacing: 0.4px;\n}\n.author {\n  margin: 5px 0 0;\n  a {\n    font-size: 14px;\n    color: $mainColor;\n  }\n}\n@include mobile() {\n  .quote {\n    font-size: 14px;\n  }\n  .author {\n    font-size: 12px;\n  }\n}\n','@import "./vars";\n.table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 16px;\n  tr td {\n    letter-spacing: 0.8px;\n    height: 40px;\n    border: 0.5px solid $greyColor;\n    text-align: center;\n    padding: 0;\n    color: #000;\n    &:nth-last-of-type(even) {\n      color: $greyColor;\n      background-color: #efefef;\n    }\n  }\n  .tableHeader {\n    font-weight: bold;\n    background-color: $mainColor;\n    color: #fff;\n    text-align: center;\n  }\n}\n@include mobile() {\n  .table {\n    font-size: 14px;\n    .tableHeader {\n      font-size: 14px;\n    }\n  }\n}\n','@import "./vars";\n.list {\n  padding-left: 1rem;\n  font-size: 14px;\n  color: $greyColor;\n  li {\n    margin-bottom: 10px;\n    line-height: 22px;\n    letter-spacing: 0.4px;\n    strong {\n      color: #ff3333;\n      font-weight: normal;\n    }\n  }\n  p {\n    font-size: 12px;\n    margin: 0;\n    color: $lightGreyColor;\n  }\n}\n',"$darkColor: #141414;\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: $darkColor;\n    .left {\n      background-color: $darkColor;\n      textarea {\n        background-color: $darkColor;\n        color: #fff;\n      }\n    }\n    .right {\n      color: #fff;\n    }\n    .button {\n      background-color: $darkColor;\n    }\n    .message {\n      background-color: rgba($color: #fff, $alpha: 0.5);\n    }\n    .list li strong {\n      color: #ff9999;\n    }\n    .table {\n      tr td {\n        border: 0.5px solid $greyColor;\n        color: $greyColor;\n        &:nth-last-of-type(even) {\n          color: #000;\n          background-color: #aaa;\n        }\n      }\n      .tableHeader {\n        color: #000;\n      }\n    }\n  }\n}\n"],sourceRoot:""}]),l.locals={container:"efOKq8lGg80MaQSNcs0F",header:"MQli88TStumNWFVVfp89",headingWrapper:"pyOEPZrIcH8mijZjNAjz",heading:"b4QxpC_Y_GNNvGEKwOva",message:"VXv69VF2hvWoOUTUZReI",boxWrapper:"euH8GKBhCR6ctB9_3Iqh",left:"mZcyROCiUBoOIbKYvFEv",arrow:"nl27_SjWClYb7rNZVoFw",right:"qLrNjrJWCZst3Tq2yriD",empty:"dbpoIrkpdcYMjp3Lko1i",none:"Q27gCDIfoxUrRYMKqgtL",button:"KfgPJuuZUmnygv2Zpcm1",check:"EM7TrywmuaZzbdCOfzi9",quote:"zOffHoITxfIQP82O0eQc",author:"i8apdQ7LI3op1eWbbkGy",table:"b6dM2HQgGjwc5Asa8JdR",tableHeader:"hwWmj65k8qDBCTJ6YXqZ",list:"WgVyvhNhUHkWMRZbdEra"};const i=l},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var i=0;i<this.length;i++){var u=this[i][0];null!=u&&(l[u]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&l[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},7537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),l=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(l).concat([o]).join("\n")}return[t].join("\n")}},4448:(e,t,n)=>{"use strict";
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(7294),a=n(3840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,i={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(i[e]=t,e=0;e<t.length;e++)l.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var A=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),w=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),_=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),P=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),T=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var z=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var L=Symbol.iterator;function I(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=L&&e[L]||e["@@iterator"])?e:null}var B,U=Object.assign;function M(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var F=!1;function D(e,t){if(!e||F)return"";F=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i]){var u="\n"+a[l].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=l&&0<=i);break}}}finally{F=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?M(e):""}function j(e){switch(e.tag){case 5:return M(e.type);case 16:return M("Lazy");case 13:return M("Suspense");case 19:return M("SuspenseList");case 0:case 2:case 15:return e=D(e.type,!1);case 11:return e=D(e.type.render,!1);case 1:return e=D(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case k:return"Fragment";case w:return"Portal";case x:return"Profiler";case E:return"StrictMode";case N:return"Suspense";case P:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case S:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case T:t=e._payload,e=e._init;try{return H(e(t))}catch(e){}}return null}function W(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $(e){e._valueTracker||(e._valueTracker=function(e){var t=q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return U({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Y(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function J(e,t){Y(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function X(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return U({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function oe(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,fe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ve=U({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ae=null;function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,ke=null,Ee=null;function xe(e){if(e=ba(e)){if("function"!=typeof we)throw Error(o(280));var t=e.stateNode;t&&(t=Ca(t),we(e.stateNode,e.type,t))}}function Se(e){ke?Ee?Ee.push(e):Ee=[e]:ke=e}function _e(){if(ke){var e=ke,t=Ee;if(Ee=ke=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Oe(e,t){return e(t)}function Ne(){}var Pe=!1;function Re(e,t,n){if(Pe)return e(t,n);Pe=!0;try{return Oe(e,t,n)}finally{Pe=!1,(null!==ke||null!==Ee)&&(Ne(),_e())}}function Te(e,t){var n=e.stateNode;if(null===n)return null;var r=Ca(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var ze=!1;if(c)try{var Le={};Object.defineProperty(Le,"passive",{get:function(){ze=!0}}),window.addEventListener("test",Le,Le),window.removeEventListener("test",Le,Le)}catch(ce){ze=!1}function Ie(e,t,n,r,a,o,l,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Be=!1,Ue=null,Me=!1,Fe=null,De={onError:function(e){Be=!0,Ue=e}};function je(e,t,n,r,a,o,l,i,u){Be=!1,Ue=null,Ie.apply(De,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function We(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ve(e){if(He(e)!==e)throw Error(o(188))}function qe(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){n=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===n)return Ve(a),e;if(l===r)return Ve(a),t;l=l.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=l;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=l;break}if(u===r){i=!0,r=a,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=a;break}if(u===r){i=!0,r=l,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=$e(e);if(null!==t)return t;e=e.sibling}return null}var Qe=a.unstable_scheduleCallback,Ge=a.unstable_cancelCallback,Ze=a.unstable_shouldYield,Ke=a.unstable_requestPaint,Ye=a.unstable_now,Je=a.unstable_getCurrentPriorityLevel,Xe=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,ot=null;var lt=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2;var st=64,ct=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,l=268435455&n;if(0!==l){var i=l&~a;0!==i?r=ft(i):0!==(o&=l)&&(r=ft(o))}else 0!==(l=n&~a)?r=ft(l):0!==o&&(r=ft(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-lt(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=st;return 0==(4194240&(st<<=1))&&(st=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-lt(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-lt(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function At(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Ct,wt,kt,Et,xt,St=!1,_t=[],Ot=null,Nt=null,Pt=null,Rt=new Map,Tt=new Map,zt=[],Lt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function It(e,t){switch(e){case"focusin":case"focusout":Ot=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":Pt=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Bt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&(null!==(t=ba(t))&&wt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ut(e){var t=ya(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=We(n)))return e.blockedOn=t,void xt(e.priority,(function(){kt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&wt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Ae=r,n.target.dispatchEvent(r),Ae=null,t.shift()}return!0}function Ft(e,t,n){Mt(e)&&n.delete(t)}function Dt(){St=!1,null!==Ot&&Mt(Ot)&&(Ot=null),null!==Nt&&Mt(Nt)&&(Nt=null),null!==Pt&&Mt(Pt)&&(Pt=null),Rt.forEach(Ft),Tt.forEach(Ft)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,St||(St=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Dt)))}function Ht(e){function t(t){return jt(t,e)}if(0<_t.length){jt(_t[0],e);for(var n=1;n<_t.length;n++){var r=_t[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ot&&jt(Ot,e),null!==Nt&&jt(Nt,e),null!==Pt&&jt(Pt,e),Rt.forEach(t),Tt.forEach(t),n=0;n<zt.length;n++)(r=zt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<zt.length&&null===(n=zt[0]).blockedOn;)Ut(n),null===n.blockedOn&&zt.shift()}var Wt=A.ReactCurrentBatchConfig,Vt=!0;function qt(e,t,n,r){var a=bt,o=Wt.transition;Wt.transition=null;try{bt=1,Qt(e,t,n,r)}finally{bt=a,Wt.transition=o}}function $t(e,t,n,r){var a=bt,o=Wt.transition;Wt.transition=null;try{bt=4,Qt(e,t,n,r)}finally{bt=a,Wt.transition=o}}function Qt(e,t,n,r){if(Vt){var a=Zt(e,t,n,r);if(null===a)Vr(e,t,r,Gt,n),It(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Ot=Bt(Ot,e,t,n,r,a),!0;case"dragenter":return Nt=Bt(Nt,e,t,n,r,a),!0;case"mouseover":return Pt=Bt(Pt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Rt.set(o,Bt(Rt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Tt.set(o,Bt(Tt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(It(e,r),4&t&&-1<Lt.indexOf(e)){for(;null!==a;){var o=ba(a);if(null!==o&&Ct(o),null===(o=Zt(e,t,n,r))&&Vr(e,t,r,Gt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Gt=null;function Zt(e,t,n,r){if(Gt=null,null!==(e=ya(e=Ce(r))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=We(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Gt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Xe:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Yt=null,Jt=null,Xt=null;function en(){if(Xt)return Xt;var e,t,n=Jt,r=n.length,a="value"in Yt?Yt.value:Yt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return Xt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return U(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,ln,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(sn),fn=U({},sn,{view:0,detail:0}),dn=an(fn),pn=U({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(on=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=on=0,un=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=an(pn),mn=an(U({},pn,{dataTransfer:0})),gn=an(U({},fn,{relatedTarget:0})),vn=an(U({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=U({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(yn),An=an(U({},sn,{data:0})),Cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kn[e])&&!!t[e]}function xn(){return En}var Sn=U({},fn,{key:function(e){if(e.key){var t=Cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),_n=an(Sn),On=an(U({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=an(U({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),Pn=an(U({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=U({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Tn=an(Rn),zn=[9,13,27,32],Ln=c&&"CompositionEvent"in window,In=null;c&&"documentMode"in document&&(In=document.documentMode);var Bn=c&&"TextEvent"in window&&!In,Un=c&&(!Ln||In&&8<In&&11>=In),Mn=String.fromCharCode(32),Fn=!1;function Dn(e,t){switch(e){case"keyup":return-1!==zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function jn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var Wn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Wn[e.type]:"textarea"===t}function qn(e,t,n,r){Se(r),0<(t=$r(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Qn=null;function Gn(e){Mr(e,0)}function Zn(e){if(Q(Aa(e)))return e}function Kn(e,t){if("change"===e)return t}var Yn=!1;if(c){var Jn;if(c){var Xn="oninput"in document;if(!Xn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Xn="function"==typeof er.oninput}Jn=Xn}else Jn=!1;Yn=Jn&&(!document.documentMode||9<document.documentMode)}function tr(){$n&&($n.detachEvent("onpropertychange",nr),Qn=$n=null)}function nr(e){if("value"===e.propertyName&&Zn(Qn)){var t=[];qn(t,Qn,e,Ce(e)),Re(Gn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Qn=n,($n=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zn(Qn)}function or(e,t){if("click"===e)return Zn(t)}function lr(e,t){if("input"===e||"change"===e)return Zn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!f.call(t,a)||!ir(e[a],t[a]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=cr(n,o);var l=cr(n,r);a&&l&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,vr=null,yr=null,br=!1;function Ar(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==G(r)||("selectionStart"in(r=gr)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=$r(vr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Cr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wr={animationend:Cr("Animation","AnimationEnd"),animationiteration:Cr("Animation","AnimationIteration"),animationstart:Cr("Animation","AnimationStart"),transitionend:Cr("Transition","TransitionEnd")},kr={},Er={};function xr(e){if(kr[e])return kr[e];if(!wr[e])return e;var t,n=wr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return kr[e]=n[t];return e}c&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var Sr=xr("animationend"),_r=xr("animationiteration"),Or=xr("animationstart"),Nr=xr("transitionend"),Pr=new Map,Rr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Tr(e,t){Pr.set(e,t),u(t,[e])}for(var zr=0;zr<Rr.length;zr++){var Lr=Rr[zr];Tr(Lr.toLowerCase(),"on"+(Lr[0].toUpperCase()+Lr.slice(1)))}Tr(Sr,"onAnimationEnd"),Tr(_r,"onAnimationIteration"),Tr(Or,"onAnimationStart"),Tr("dblclick","onDoubleClick"),Tr("focusin","onFocus"),Tr("focusout","onBlur"),Tr(Nr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ir="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Br=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));function Ur(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,l,i,u,s){if(je.apply(this,arguments),Be){if(!Be)throw Error(o(198));var c=Ue;Be=!1,Ue=null,Me||(Me=!0,Fe=c)}}(r,t,void 0,e),e.currentTarget=null}function Mr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Ur(a,i,s),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,s=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Ur(a,i,s),o=u}}}if(Me)throw e=Fe,Me=!1,Fe=null,e}function Fr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||(Wr(t,e,2,!1),n.add(r))}function Dr(e,t,n){var r=0;t&&(r|=4),Wr(n,e,r,t)}var jr="_reactListening"+Math.random().toString(36).slice(2);function Hr(e){if(!e[jr]){e[jr]=!0,l.forEach((function(t){"selectionchange"!==t&&(Br.has(t)||Dr(t,!1,e),Dr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[jr]||(t[jr]=!0,Dr("selectionchange",!1,t))}}function Wr(e,t,n,r){switch(Kt(t)){case 1:var a=qt;break;case 4:a=$t;break;default:a=Qt}n=a.bind(null,t,n,e),a=void 0,!ze||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=ya(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}Re((function(){var r=o,a=Ce(n),l=[];e:{var i=Pr.get(e);if(void 0!==i){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case Sr:case _r:case Or:u=vn;break;case Nr:u=Pn;break;case"scroll":u=dn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Te(h,d))&&c.push(qr(h,m,p)))),f)break;h=h.return}0<c.length&&(i=new u(i,s,null,n,a),l.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===Ae||!(s=n.relatedTarget||n.fromElement)||!ya(s)&&!s[ha])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?ya(s):null)&&(s!==(f=He(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=hn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=On,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:Aa(u),p=null==s?i:Aa(s),(i=new c(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,ya(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Qr(p))h++;for(p=0,m=d;m;m=Qr(m))p++;for(;0<h-p;)c=Qr(c),h--;for(;0<p-h;)d=Qr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Qr(c),d=Qr(d)}c=null}else c=null;null!==u&&Gr(l,i,u,c,!1),null!==s&&null!==f&&Gr(l,f,s,c,!0)}if("select"===(u=(i=r?Aa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var g=Kn;else if(Vn(i))if(Yn)g=lr;else{g=ar;var v=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=or);switch(g&&(g=g(e,r))?qn(l,g,n,a):(v&&v(e,i,r),"focusout"===e&&(v=i._wrapperState)&&v.controlled&&"number"===i.type&&ee(i,"number",i.value)),v=r?Aa(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(gr=v,vr=r,yr=null);break;case"focusout":yr=vr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,Ar(l,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":Ar(l,n,a)}var y;if(Ln)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Hn?Dn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Un&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Hn&&(y=en()):(Jt="value"in(Yt=a)?Yt.value:Yt.textContent,Hn=!0)),0<(v=$r(r,b)).length&&(b=new An(b,e,null,n,a),l.push({event:b,listeners:v}),y?b.data=y:null!==(y=jn(n))&&(b.data=y))),(y=Bn?function(e,t){switch(e){case"compositionend":return jn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Mn);case"textInput":return(e=t.data)===Mn&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Ln&&Dn(e,t)?(e=en(),Xt=Jt=Yt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Un&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=$r(r,"onBeforeInput")).length&&(a=new An("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=y))}Mr(l,t)}))}function qr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function $r(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Te(e,n))&&r.unshift(qr(e,o,a)),null!=(o=Te(e,t))&&r.push(qr(e,o,a))),e=e.return}return r}function Qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Gr(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,a?null!=(u=Te(n,o))&&l.unshift(qr(n,u,i)):a||null!=(u=Te(n,o))&&l.push(qr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}var Zr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Yr(e){return("string"==typeof e?e:""+e).replace(Zr,"\n").replace(Kr,"")}function Jr(e,t,n){if(t=Yr(t),Yr(e)!==t&&n)throw Error(o(425))}function Xr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,la="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Ht(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Ht(t)}function sa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,ga="__reactListeners$"+fa,va="__reactHandles$"+fa;function ya(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[da])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Ca(e){return e[pa]||null}var wa=[],ka=-1;function Ea(e){return{current:e}}function xa(e){0>ka||(e.current=wa[ka],wa[ka]=null,ka--)}function Sa(e,t){ka++,wa[ka]=e.current,e.current=t}var _a={},Oa=Ea(_a),Na=Ea(!1),Pa=_a;function Ra(e,t){var n=e.type.contextTypes;if(!n)return _a;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ta(e){return null!=(e=e.childContextTypes)}function za(){xa(Na),xa(Oa)}function La(e,t,n){if(Oa.current!==_a)throw Error(o(168));Sa(Oa,t),Sa(Na,n)}function Ia(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,W(e)||"Unknown",a));return U({},n,r)}function Ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||_a,Pa=Oa.current,Sa(Oa,e),Sa(Na,Na.current),!0}function Ua(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Ia(e,t,Pa),r.__reactInternalMemoizedMergedChildContext=e,xa(Na),xa(Oa),Sa(Oa,e)):xa(Na),Sa(Na,n)}var Ma=null,Fa=!1,Da=!1;function ja(e){null===Ma?Ma=[e]:Ma.push(e)}function Ha(){if(!Da&&null!==Ma){Da=!0;var e=0,t=bt;try{var n=Ma;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ma=null,Fa=!1}catch(t){throw null!==Ma&&(Ma=Ma.slice(e+1)),Qe(Xe,Ha),t}finally{bt=t,Da=!1}}return null}var Wa=[],Va=0,qa=null,$a=0,Qa=[],Ga=0,Za=null,Ka=1,Ya="";function Ja(e,t){Wa[Va++]=$a,Wa[Va++]=qa,qa=e,$a=t}function Xa(e,t,n){Qa[Ga++]=Ka,Qa[Ga++]=Ya,Qa[Ga++]=Za,Za=e;var r=Ka;e=Ya;var a=32-lt(r)-1;r&=~(1<<a),n+=1;var o=32-lt(t)+a;if(30<o){var l=a-a%5;o=(r&(1<<l)-1).toString(32),r>>=l,a-=l,Ka=1<<32-lt(t)+a|n<<a|r,Ya=o+e}else Ka=1<<o|n<<a|r,Ya=e}function eo(e){null!==e.return&&(Ja(e,1),Xa(e,1,0))}function to(e){for(;e===qa;)qa=Wa[--Va],Wa[Va]=null,$a=Wa[--Va],Wa[Va]=null;for(;e===Za;)Za=Qa[--Ga],Qa[Ga]=null,Ya=Qa[--Ga],Qa[Ga]=null,Ka=Qa[--Ga],Qa[Ga]=null}var no=null,ro=null,ao=!1,oo=null;function lo(e,t){var n=Rs(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=sa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Za?{id:Ka,overflow:Ya}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Rs(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function uo(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function so(e){if(ao){var t=ro;if(t){var n=t;if(!io(e,t)){if(uo(e))throw Error(o(418));t=sa(n.nextSibling);var r=no;t&&io(e,t)?lo(r,n):(e.flags=-4097&e.flags|2,ao=!1,no=e)}}else{if(uo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,no=e}}}function co(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function fo(e){if(e!==no)return!1;if(!ao)return co(e),ao=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ro)){if(uo(e))throw po(),Error(o(418));for(;t;)lo(e,t),t=sa(t.nextSibling)}if(co(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=sa(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?sa(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=sa(e.nextSibling)}function ho(){ro=no=null,ao=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var go=A.ReactCurrentBatchConfig;function vo(e,t){if(e&&e.defaultProps){for(var n in t=U({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var yo=Ea(null),bo=null,Ao=null,Co=null;function wo(){Co=Ao=bo=null}function ko(e){var t=yo.current;xa(yo),e._currentValue=t}function Eo(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function xo(e,t){bo=e,Co=Ao=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ai=!0),e.firstContext=null)}function So(e){var t=e._currentValue;if(Co!==e)if(e={context:e,memoizedValue:t,next:null},null===Ao){if(null===bo)throw Error(o(308));Ao=e,bo.dependencies={lanes:0,firstContext:e}}else Ao=Ao.next=e;return t}var _o=null;function Oo(e){null===_o?_o=[e]:_o.push(e)}function No(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Oo(t)):(n.next=a.next,a.next=n),t.interleaved=n,Po(e,r)}function Po(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ro=!1;function To(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Lo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Io(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Ou)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Po(e,n)}return null===(a=r.interleaved)?(t.next=t,Oo(r)):(t.next=a.next,a.next=t),r.interleaved=t,Po(e,n)}function Bo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Uo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Mo(e,t,n,r){var a=e.updateQueue;Ro=!1;var o=a.firstBaseUpdate,l=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var u=i,s=u.next;u.next=null,null===l?o=s:l.next=s,l=u;var c=e.alternate;null!==c&&((i=(c=c.updateQueue).lastBaseUpdate)!==l&&(null===i?c.firstBaseUpdate=s:i.next=s,c.lastBaseUpdate=u))}if(null!==o){var f=a.baseState;for(l=0,c=s=u=null,i=o;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=U({},f,d);break e;case 2:Ro=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(s=c=p,u=f):c=c.next=p,l|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(u=f),a.baseState=u,a.firstBaseUpdate=s,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{l|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Bu|=l,e.lanes=l,e.memoizedState=f}}function Fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Do=(new r.Component).refs;function jo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:U({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Ho={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=es(),a=ts(e),o=Lo(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=Io(e,o,a))&&(ns(t,e,a,r),Bo(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=es(),a=ts(e),o=Lo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=Io(e,o,a))&&(ns(t,e,a,r),Bo(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=es(),r=ts(e),a=Lo(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=Io(e,a,r))&&(ns(t,e,r,n),Bo(t,e,r))}};function Wo(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!t.prototype||!t.prototype.isPureReactComponent||(!ur(n,r)||!ur(a,o))}function Vo(e,t,n){var r=!1,a=_a,o=t.contextType;return"object"==typeof o&&null!==o?o=So(o):(a=Ta(t)?Pa:Oa.current,o=(r=null!=(r=t.contextTypes))?Ra(e,a):_a),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ho,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function qo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ho.enqueueReplaceState(t,t.state,null)}function $o(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Do,To(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=So(o):(o=Ta(t)?Pa:Oa.current,a.context=Ra(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(jo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Ho.enqueueReplaceState(a,a.state,null),Mo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Qo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=a.refs;t===Do&&(t=a.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Go(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Zo(e){return(0,e._init)(e._payload)}function Ko(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=zs(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Us(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){var o=n.type;return o===k?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===T&&Zo(o)===t.type)?((r=a(t,n.props)).ref=Qo(e,t,n),r.return=e,r):((r=Ls(n.type,n.key,n.props,null,e.mode,r)).ref=Qo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ms(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Is(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Us(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return(n=Ls(t.type,t.key,t.props,null,e.mode,n)).ref=Qo(e,null,t),n.return=e,n;case w:return(t=Ms(t,e.mode,n)).return=e,t;case T:return d(e,(0,t._init)(t._payload),n)}if(te(t)||I(t))return(t=Is(t,e.mode,n,null)).return=e,t;Go(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return n.key===a?s(e,t,n,r):null;case w:return n.key===a?c(e,t,n,r):null;case T:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||I(n))return null!==a?null:f(e,t,n,r,null);Go(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case w:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case T:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||I(r))return f(t,e=e.get(n)||null,r,a,null);Go(t,r)}return null}function m(a,o,i,u){for(var s=null,c=null,f=o,m=o=0,g=null;null!==f&&m<i.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(a,f,i[m],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),o=l(v,o,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===i.length)return n(a,f),ao&&Ja(a,m),s;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(o=l(f,o,m),null===c?s=f:c.sibling=f,c=f);return ao&&Ja(a,m),s}for(f=r(a,f);m<i.length;m++)null!==(g=h(f,a,m,i[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),o=l(g,o,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),ao&&Ja(a,m),s}function g(a,i,u,s){var c=I(u);if("function"!=typeof c)throw Error(o(150));if(null==(u=c.call(u)))throw Error(o(151));for(var f=c=null,m=i,g=i=0,v=null,y=u.next();null!==m&&!y.done;g++,y=u.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=p(a,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(a,m),i=l(b,i,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(a,m),ao&&Ja(a,g),c;if(null===m){for(;!y.done;g++,y=u.next())null!==(y=d(a,y.value,s))&&(i=l(y,i,g),null===f?c=y:f.sibling=y,f=y);return ao&&Ja(a,g),c}for(m=r(a,m);!y.done;g++,y=u.next())null!==(y=h(m,a,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),i=l(y,i,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(a,e)})),ao&&Ja(a,g),c}return function e(r,o,l,u){if("object"==typeof l&&null!==l&&l.type===k&&null===l.key&&(l=l.props.children),"object"==typeof l&&null!==l){switch(l.$$typeof){case C:e:{for(var s=l.key,c=o;null!==c;){if(c.key===s){if((s=l.type)===k){if(7===c.tag){n(r,c.sibling),(o=a(c,l.props.children)).return=r,r=o;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===T&&Zo(s)===c.type){n(r,c.sibling),(o=a(c,l.props)).ref=Qo(r,c,l),o.return=r,r=o;break e}n(r,c);break}t(r,c),c=c.sibling}l.type===k?((o=Is(l.props.children,r.mode,u,l.key)).return=r,r=o):((u=Ls(l.type,l.key,l.props,null,r.mode,u)).ref=Qo(r,o,l),u.return=r,r=u)}return i(r);case w:e:{for(c=l.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===l.containerInfo&&o.stateNode.implementation===l.implementation){n(r,o.sibling),(o=a(o,l.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=Ms(l,r.mode,u)).return=r,r=o}return i(r);case T:return e(r,o,(c=l._init)(l._payload),u)}if(te(l))return m(r,o,l,u);if(I(l))return g(r,o,l,u);Go(r,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,l)).return=r,r=o):(n(r,o),(o=Us(l,r.mode,u)).return=r,r=o),i(r)):n(r,o)}}var Yo=Ko(!0),Jo=Ko(!1),Xo={},el=Ea(Xo),tl=Ea(Xo),nl=Ea(Xo);function rl(e){if(e===Xo)throw Error(o(174));return e}function al(e,t){switch(Sa(nl,t),Sa(tl,e),Sa(el,Xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xa(el),Sa(el,t)}function ol(){xa(el),xa(tl),xa(nl)}function ll(e){rl(nl.current);var t=rl(el.current),n=ue(t,e.type);t!==n&&(Sa(tl,e),Sa(el,n))}function il(e){tl.current===e&&(xa(el),xa(tl))}var ul=Ea(0);function sl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var cl=[];function fl(){for(var e=0;e<cl.length;e++)cl[e]._workInProgressVersionPrimary=null;cl.length=0}var dl=A.ReactCurrentDispatcher,pl=A.ReactCurrentBatchConfig,hl=0,ml=null,gl=null,vl=null,yl=!1,bl=!1,Al=0,Cl=0;function wl(){throw Error(o(321))}function kl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function El(e,t,n,r,a,l){if(hl=l,ml=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,dl.current=null===e||null===e.memoizedState?ii:ui,e=n(r,a),bl){l=0;do{if(bl=!1,Al=0,25<=l)throw Error(o(301));l+=1,vl=gl=null,t.updateQueue=null,dl.current=si,e=n(r,a)}while(bl)}if(dl.current=li,t=null!==gl&&null!==gl.next,hl=0,vl=gl=ml=null,yl=!1,t)throw Error(o(300));return e}function xl(){var e=0!==Al;return Al=0,e}function Sl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===vl?ml.memoizedState=vl=e:vl=vl.next=e,vl}function _l(){if(null===gl){var e=ml.alternate;e=null!==e?e.memoizedState:null}else e=gl.next;var t=null===vl?ml.memoizedState:vl.next;if(null!==t)vl=t,gl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(gl=e).memoizedState,baseState:gl.baseState,baseQueue:gl.baseQueue,queue:gl.queue,next:null},null===vl?ml.memoizedState=vl=e:vl=vl.next=e}return vl}function Ol(e,t){return"function"==typeof t?t(e):t}function Nl(e){var t=_l(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=gl,a=r.baseQueue,l=n.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,n.pending=null}if(null!==a){l=a.next,r=r.baseState;var u=i=null,s=null,c=l;do{var f=c.lane;if((hl&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=d,i=r):s=s.next=d,ml.lanes|=f,Bu|=f}c=c.next}while(null!==c&&c!==l);null===s?i=r:s.next=u,ir(r,t.memoizedState)||(Ai=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{l=a.lane,ml.lanes|=l,Bu|=l,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Pl(e){var t=_l(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,l=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);ir(l,t.memoizedState)||(Ai=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function Rl(){}function Tl(e,t){var n=ml,r=_l(),a=t(),l=!ir(r.memoizedState,a);if(l&&(r.memoizedState=a,Ai=!0),r=r.queue,Vl(Il.bind(null,n,r,e),[e]),r.getSnapshot!==t||l||null!==vl&&1&vl.memoizedState.tag){if(n.flags|=2048,Fl(9,Ll.bind(null,n,r,a,t),void 0,null),null===Nu)throw Error(o(349));0!=(30&hl)||zl(n,t,a)}return a}function zl(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ml.updateQueue)?(t={lastEffect:null,stores:null},ml.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ll(e,t,n,r){t.value=n,t.getSnapshot=r,Bl(t)&&Ul(e)}function Il(e,t,n){return n((function(){Bl(t)&&Ul(e)}))}function Bl(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Ul(e){var t=Po(e,1);null!==t&&ns(t,e,1,-1)}function Ml(e){var t=Sl();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ol,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,ml,e),[t.memoizedState,e]}function Fl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ml.updateQueue)?(t={lastEffect:null,stores:null},ml.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Dl(){return _l().memoizedState}function jl(e,t,n,r){var a=Sl();ml.flags|=e,a.memoizedState=Fl(1|t,n,void 0,void 0===r?null:r)}function Hl(e,t,n,r){var a=_l();r=void 0===r?null:r;var o=void 0;if(null!==gl){var l=gl.memoizedState;if(o=l.destroy,null!==r&&kl(r,l.deps))return void(a.memoizedState=Fl(t,n,o,r))}ml.flags|=e,a.memoizedState=Fl(1|t,n,o,r)}function Wl(e,t){return jl(8390656,8,e,t)}function Vl(e,t){return Hl(2048,8,e,t)}function ql(e,t){return Hl(4,2,e,t)}function $l(e,t){return Hl(4,4,e,t)}function Ql(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Gl(e,t,n){return n=null!=n?n.concat([e]):null,Hl(4,4,Ql.bind(null,t,e),n)}function Zl(){}function Kl(e,t){var n=_l();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&kl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Yl(e,t){var n=_l();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&kl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Jl(e,t,n){return 0==(21&hl)?(e.baseState&&(e.baseState=!1,Ai=!0),e.memoizedState=n):(ir(n,t)||(n=mt(),ml.lanes|=n,Bu|=n,e.baseState=!0),t)}function Xl(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=pl.transition;pl.transition={};try{e(!1),t()}finally{bt=n,pl.transition=r}}function ei(){return _l().memoizedState}function ti(e,t,n){var r=ts(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ri(e))ai(t,n);else if(null!==(n=No(e,t,n,r))){ns(n,e,r,es()),oi(n,t,r)}}function ni(e,t,n){var r=ts(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ri(e))ai(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var l=t.lastRenderedState,i=o(l,n);if(a.hasEagerState=!0,a.eagerState=i,ir(i,l)){var u=t.interleaved;return null===u?(a.next=a,Oo(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=No(e,t,a,r))&&(ns(n,e,r,a=es()),oi(n,t,r))}}function ri(e){var t=e.alternate;return e===ml||null!==t&&t===ml}function ai(e,t){bl=yl=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function oi(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var li={readContext:So,useCallback:wl,useContext:wl,useEffect:wl,useImperativeHandle:wl,useInsertionEffect:wl,useLayoutEffect:wl,useMemo:wl,useReducer:wl,useRef:wl,useState:wl,useDebugValue:wl,useDeferredValue:wl,useTransition:wl,useMutableSource:wl,useSyncExternalStore:wl,useId:wl,unstable_isNewReconciler:!1},ii={readContext:So,useCallback:function(e,t){return Sl().memoizedState=[e,void 0===t?null:t],e},useContext:So,useEffect:Wl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,jl(4194308,4,Ql.bind(null,t,e),n)},useLayoutEffect:function(e,t){return jl(4194308,4,e,t)},useInsertionEffect:function(e,t){return jl(4,2,e,t)},useMemo:function(e,t){var n=Sl();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Sl();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ti.bind(null,ml,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Sl().memoizedState=e},useState:Ml,useDebugValue:Zl,useDeferredValue:function(e){return Sl().memoizedState=e},useTransition:function(){var e=Ml(!1),t=e[0];return e=Xl.bind(null,e[1]),Sl().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ml,a=Sl();if(ao){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Nu)throw Error(o(349));0!=(30&hl)||zl(r,t,n)}a.memoizedState=n;var l={value:n,getSnapshot:t};return a.queue=l,Wl(Il.bind(null,r,l,e),[e]),r.flags|=2048,Fl(9,Ll.bind(null,r,l,n,t),void 0,null),n},useId:function(){var e=Sl(),t=Nu.identifierPrefix;if(ao){var n=Ya;t=":"+t+"R"+(n=(Ka&~(1<<32-lt(Ka)-1)).toString(32)+n),0<(n=Al++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=Cl++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ui={readContext:So,useCallback:Kl,useContext:So,useEffect:Vl,useImperativeHandle:Gl,useInsertionEffect:ql,useLayoutEffect:$l,useMemo:Yl,useReducer:Nl,useRef:Dl,useState:function(){return Nl(Ol)},useDebugValue:Zl,useDeferredValue:function(e){return Jl(_l(),gl.memoizedState,e)},useTransition:function(){return[Nl(Ol)[0],_l().memoizedState]},useMutableSource:Rl,useSyncExternalStore:Tl,useId:ei,unstable_isNewReconciler:!1},si={readContext:So,useCallback:Kl,useContext:So,useEffect:Vl,useImperativeHandle:Gl,useInsertionEffect:ql,useLayoutEffect:$l,useMemo:Yl,useReducer:Pl,useRef:Dl,useState:function(){return Pl(Ol)},useDebugValue:Zl,useDeferredValue:function(e){var t=_l();return null===gl?t.memoizedState=e:Jl(t,gl.memoizedState,e)},useTransition:function(){return[Pl(Ol)[0],_l().memoizedState]},useMutableSource:Rl,useSyncExternalStore:Tl,useId:ei,unstable_isNewReconciler:!1};function ci(e,t){try{var n="",r=t;do{n+=j(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function fi(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function hi(e,t,n){(n=Lo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vu||(Vu=!0,qu=r),di(0,t)},n}function mi(e,t,n){(n=Lo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){di(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){di(0,t),"function"!=typeof r&&(null===$u?$u=new Set([this]):$u.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=xs.bind(null,e,t,n),t.then(e,e))}function vi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Lo(-1,1)).tag=2,Io(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var bi=A.ReactCurrentOwner,Ai=!1;function Ci(e,t,n,r){t.child=null===e?Jo(t,null,n,r):Yo(t,e.child,n,r)}function wi(e,t,n,r,a){n=n.render;var o=t.ref;return xo(t,a),r=El(e,t,n,r,o,a),n=xl(),null===e||Ai?(ao&&n&&eo(t),t.flags|=1,Ci(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vi(e,t,a))}function ki(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Ts(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ls(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ei(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var l=o.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(l,r)&&e.ref===t.ref)return Vi(e,t,a)}return t.flags|=1,(e=zs(o,r)).ref=t.ref,e.return=t,t.child=e}function Ei(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(ur(o,r)&&e.ref===t.ref){if(Ai=!1,t.pendingProps=r=o,0==(e.lanes&a))return t.lanes=e.lanes,Vi(e,t,a);0!=(131072&e.flags)&&(Ai=!0)}}return _i(e,t,n,r,a)}function xi(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Sa(zu,Tu),Tu|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Sa(zu,Tu),Tu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Sa(zu,Tu),Tu|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Sa(zu,Tu),Tu|=r;return Ci(e,t,a,n),t.child}function Si(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function _i(e,t,n,r,a){var o=Ta(n)?Pa:Oa.current;return o=Ra(t,o),xo(t,a),n=El(e,t,n,r,o,a),r=xl(),null===e||Ai?(ao&&r&&eo(t),t.flags|=1,Ci(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vi(e,t,a))}function Oi(e,t,n,r,a){if(Ta(n)){var o=!0;Ba(t)}else o=!1;if(xo(t,a),null===t.stateNode)Wi(e,t),Vo(t,n,r),$o(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,s=n.contextType;"object"==typeof s&&null!==s?s=So(s):s=Ra(t,s=Ta(n)?Pa:Oa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==s)&&qo(t,l,r,s),Ro=!1;var d=t.memoizedState;l.state=d,Mo(t,r,l,a),u=t.memoizedState,i!==r||d!==u||Na.current||Ro?("function"==typeof c&&(jo(t,n,c,r),u=t.memoizedState),(i=Ro||Wo(t,n,i,r,d,u,s))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4194308)):("function"==typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=s,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4194308),r=!1)}else{l=t.stateNode,zo(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:vo(t.type,i),l.props=s,f=t.pendingProps,d=l.context,"object"==typeof(u=n.contextType)&&null!==u?u=So(u):u=Ra(t,u=Ta(n)?Pa:Oa.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&qo(t,l,r,u),Ro=!1,d=t.memoizedState,l.state=d,Mo(t,r,l,a);var h=t.memoizedState;i!==f||d!==h||Na.current||Ro?("function"==typeof p&&(jo(t,n,p,r),h=t.memoizedState),(s=Ro||Wo(t,n,s,r,d,h,u)||!1)?(c||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=s):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Ni(e,t,n,r,o,a)}function Ni(e,t,n,r,a,o){Si(e,t);var l=0!=(128&t.flags);if(!r&&!l)return a&&Ua(t,n,!1),Vi(e,t,o);r=t.stateNode,bi.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Yo(t,e.child,null,o),t.child=Yo(t,null,i,o)):Ci(e,t,i,o),t.memoizedState=r.state,a&&Ua(t,n,!0),t.child}function Pi(e){var t=e.stateNode;t.pendingContext?La(0,t.pendingContext,t.pendingContext!==t.context):t.context&&La(0,t.context,!1),al(e,t.containerInfo)}function Ri(e,t,n,r,a){return ho(),mo(a),t.flags|=256,Ci(e,t,n,r),t.child}var Ti,zi,Li,Ii={dehydrated:null,treeContext:null,retryLane:0};function Bi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ui(e,t,n){var r,a=t.pendingProps,l=ul.current,i=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Sa(ul,1&l),null===e)return so(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,i?(a=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Bs(u,a,0,null),e=Is(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Bi(n),t.memoizedState=Ii,e):Mi(t,u));if(null!==(l=e.memoizedState)&&null!==(r=l.dehydrated))return function(e,t,n,r,a,l,i){if(n)return 256&t.flags?(t.flags&=-257,Fi(e,t,i,r=fi(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(l=r.fallback,a=t.mode,r=Bs({mode:"visible",children:r.children},a,0,null),(l=Is(l,a,i,null)).flags|=2,r.return=t,l.return=t,r.sibling=l,t.child=r,0!=(1&t.mode)&&Yo(t,e.child,null,i),t.child.memoizedState=Bi(i),t.memoizedState=Ii,l);if(0==(1&t.mode))return Fi(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Fi(e,t,i,r=fi(l=Error(o(419)),r,void 0))}if(u=0!=(i&e.childLanes),Ai||u){if(null!==(r=Nu)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|i))?0:a)&&a!==l.retryLane&&(l.retryLane=a,Po(e,a),ns(r,e,a,-1))}return ms(),Fi(e,t,i,r=fi(Error(o(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=_s.bind(null,e),a._reactRetry=t,null):(e=l.treeContext,ro=sa(a.nextSibling),no=t,ao=!0,oo=null,null!==e&&(Qa[Ga++]=Ka,Qa[Ga++]=Ya,Qa[Ga++]=Za,Ka=e.id,Ya=e.overflow,Za=t),(t=Mi(t,r.children)).flags|=4096,t)}(e,t,u,a,r,l,n);if(i){i=a.fallback,u=t.mode,r=(l=e.child).sibling;var s={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==l?((a=t.child).childLanes=0,a.pendingProps=s,t.deletions=null):(a=zs(l,s)).subtreeFlags=14680064&l.subtreeFlags,null!==r?i=zs(r,i):(i=Is(i,u,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,u=null===(u=e.child.memoizedState)?Bi(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Ii,a}return e=(i=e.child).sibling,a=zs(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Mi(e,t){return(t=Bs({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Fi(e,t,n,r){return null!==r&&mo(r),Yo(t,e.child,null,n),(e=Mi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Di(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Eo(e.return,t,n)}function ji(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Hi(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Ci(e,t,r.children,n),0!=(2&(r=ul.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Di(e,n,t);else if(19===e.tag)Di(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Sa(ul,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===sl(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),ji(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===sl(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}ji(t,!0,n,null,o);break;case"together":ji(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Wi(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Bu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=zs(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=zs(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function qi(e,t){if(!ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function $i(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Qi(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return $i(t),null;case 1:case 17:return Ta(t.type)&&za(),$i(t),null;case 3:return r=t.stateNode,ol(),xa(Na),xa(Oa),fl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(ls(oo),oo=null))),$i(t),null;case 5:il(t);var a=rl(nl.current);if(n=t.type,null!==e&&null!=t.stateNode)zi(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return $i(t),null}if(e=rl(el.current),fo(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[da]=t,r[pa]=l,e=0!=(1&t.mode),n){case"dialog":Fr("cancel",r),Fr("close",r);break;case"iframe":case"object":case"embed":Fr("load",r);break;case"video":case"audio":for(a=0;a<Ir.length;a++)Fr(Ir[a],r);break;case"source":Fr("error",r);break;case"img":case"image":case"link":Fr("error",r),Fr("load",r);break;case"details":Fr("toggle",r);break;case"input":K(r,l),Fr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Fr("invalid",r);break;case"textarea":ae(r,l),Fr("invalid",r)}for(var u in ye(n,l),a=null,l)if(l.hasOwnProperty(u)){var s=l[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,s,e),a=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==l.suppressHydrationWarning&&Jr(r.textContent,s,e),a=["children",""+s]):i.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Fr("scroll",r)}switch(n){case"input":$(r),X(r,l,!0);break;case"textarea":$(r),le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Xr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[da]=t,e[pa]=r,Ti(e,t),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Fr("cancel",e),Fr("close",e),a=r;break;case"iframe":case"object":case"embed":Fr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Ir.length;a++)Fr(Ir[a],e);a=r;break;case"source":Fr("error",e),a=r;break;case"img":case"image":case"link":Fr("error",e),Fr("load",e),a=r;break;case"details":Fr("toggle",e),a=r;break;case"input":K(e,r),a=Z(e,r),Fr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=U({},r,{value:void 0}),Fr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Fr("invalid",e)}for(l in ye(n,a),s=a)if(s.hasOwnProperty(l)){var c=s[l];"style"===l?ge(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===l?"string"==typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?null!=c&&"onScroll"===l&&Fr("scroll",e):null!=c&&b(e,l,c,u))}switch(n){case"input":$(e),X(e,r,!1);break;case"textarea":$(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ne(e,!!r.multiple,l,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Xr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return $i(t),null;case 6:if(e&&null!=t.stateNode)Li(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=rl(nl.current),rl(el.current),fo(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(l=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Jr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,n,0!=(1&e.mode))}l&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return $i(t),null;case 13:if(xa(ul),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))po(),ho(),t.flags|=98560,l=!1;else if(l=fo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!l)throw Error(o(318));if(!(l=null!==(l=t.memoizedState)?l.dehydrated:null))throw Error(o(317));l[da]=t}else ho(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;$i(t),l=!1}else null!==oo&&(ls(oo),oo=null),l=!0;if(!l)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ul.current)?0===Lu&&(Lu=3):ms())),null!==t.updateQueue&&(t.flags|=4),$i(t),null);case 4:return ol(),null===e&&Hr(t.stateNode.containerInfo),$i(t),null;case 10:return ko(t.type._context),$i(t),null;case 19:if(xa(ul),null===(l=t.memoizedState))return $i(t),null;if(r=0!=(128&t.flags),null===(u=l.rendering))if(r)qi(l,!1);else{if(0!==Lu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=sl(e))){for(t.flags|=128,qi(l,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=14680066,null===(u=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=u.childLanes,l.lanes=u.lanes,l.child=u.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=u.memoizedProps,l.memoizedState=u.memoizedState,l.updateQueue=u.updateQueue,l.type=u.type,e=u.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Sa(ul,1&ul.current|2),t.child}e=e.sibling}null!==l.tail&&Ye()>Hu&&(t.flags|=128,r=!0,qi(l,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=sl(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),qi(l,!0),null===l.tail&&"hidden"===l.tailMode&&!u.alternate&&!ao)return $i(t),null}else 2*Ye()-l.renderingStartTime>Hu&&1073741824!==n&&(t.flags|=128,r=!0,qi(l,!1),t.lanes=4194304);l.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=l.last)?n.sibling=u:t.child=u,l.last=u)}return null!==l.tail?(t=l.tail,l.rendering=t,l.tail=t.sibling,l.renderingStartTime=Ye(),t.sibling=null,n=ul.current,Sa(ul,r?1&n|2:1&n),t):($i(t),null);case 22:case 23:return fs(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Tu)&&($i(t),6&t.subtreeFlags&&(t.flags|=8192)):$i(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Gi(e,t){switch(to(t),t.tag){case 1:return Ta(t.type)&&za(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ol(),xa(Na),xa(Oa),fl(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return il(t),null;case 13:if(xa(ul),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));ho()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xa(ul),null;case 4:return ol(),null;case 10:return ko(t.type._context),null;case 22:case 23:return fs(),null;default:return null}}Ti=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},zi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,rl(el.current);var o,l=null;switch(n){case"input":a=Z(e,a),r=Z(e,r),l=[];break;case"select":a=U({},a,{value:void 0}),r=U({},r,{value:void 0}),l=[];break;case"textarea":a=re(e,a),r=re(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Xr)}for(c in ye(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var u=a[c];for(o in u)u.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(o in u)!u.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&u[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(l||(l=[]),l.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(l=l||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(l=l||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Fr("scroll",e),l||u===s||(l=[])):(l=l||[]).push(c,s))}n&&(l=l||[]).push("style",n);var c=l;(t.updateQueue=c)&&(t.flags|=4)}},Li=function(e,t,n,r){n!==r&&(t.flags|=4)};var Zi=!1,Ki=!1,Yi="function"==typeof WeakSet?WeakSet:Set,Ji=null;function Xi(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Es(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){Es(e,t,n)}}var tu=!1;function nu(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&eu(t,n,o)}a=a.next}while(a!==r)}}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function au(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ou(e){var t=e.alternate;null!==t&&(e.alternate=null,ou(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[ma],delete t[ga],delete t[va])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function iu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||lu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Xr));else if(4!==r&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}var cu=null,fu=!1;function du(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Ki||Xi(n,t);case 6:var r=cu,a=fu;cu=null,du(e,t,n),fu=a,null!==(cu=r)&&(fu?(e=cu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cu.removeChild(n.stateNode));break;case 18:null!==cu&&(fu?(e=cu,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Ht(e)):ua(cu,n.stateNode));break;case 4:r=cu,a=fu,cu=n.stateNode.containerInfo,fu=!0,du(e,t,n),cu=r,fu=a;break;case 0:case 11:case 14:case 15:if(!Ki&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){a=r=r.next;do{var o=a,l=o.destroy;o=o.tag,void 0!==l&&(0!=(2&o)||0!=(4&o))&&eu(n,t,l),a=a.next}while(a!==r)}du(e,t,n);break;case 1:if(!Ki&&(Xi(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Es(n,t,e)}du(e,t,n);break;case 21:du(e,t,n);break;case 22:1&n.mode?(Ki=(r=Ki)||null!==n.memoizedState,du(e,t,n),Ki=r):du(e,t,n);break;default:du(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Yi),t.forEach((function(t){var r=Os.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function mu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var l=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:cu=u.stateNode,fu=!1;break e;case 3:case 4:cu=u.stateNode.containerInfo,fu=!0;break e}u=u.return}if(null===cu)throw Error(o(160));pu(l,i,a),cu=null,fu=!1;var s=a.alternate;null!==s&&(s.return=null),a.return=null}catch(e){Es(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),vu(e),4&r){try{nu(3,e,e.return),ru(3,e)}catch(t){Es(e,e.return,t)}try{nu(5,e,e.return)}catch(t){Es(e,e.return,t)}}break;case 1:mu(t,e),vu(e),512&r&&null!==n&&Xi(n,n.return);break;case 5:if(mu(t,e),vu(e),512&r&&null!==n&&Xi(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){Es(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var l=e.memoizedProps,i=null!==n?n.memoizedProps:l,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===l.type&&null!=l.name&&Y(a,l),be(u,i);var c=be(u,l);for(i=0;i<s.length;i+=2){var f=s[i],d=s[i+1];"style"===f?ge(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,c)}switch(u){case"input":J(a,l);break;case"textarea":oe(a,l);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!l.multiple;var h=l.value;null!=h?ne(a,!!l.multiple,h,!1):p!==!!l.multiple&&(null!=l.defaultValue?ne(a,!!l.multiple,l.defaultValue,!0):ne(a,!!l.multiple,l.multiple?[]:"",!1))}a[pa]=l}catch(t){Es(e,e.return,t)}}break;case 6:if(mu(t,e),vu(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,l=e.memoizedProps;try{a.nodeValue=l}catch(t){Es(e,e.return,t)}}break;case 3:if(mu(t,e),vu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(t){Es(e,e.return,t)}break;case 4:default:mu(t,e),vu(e);break;case 13:mu(t,e),vu(e),8192&(a=e.child).flags&&(l=null!==a.memoizedState,a.stateNode.isHidden=l,!l||null!==a.alternate&&null!==a.alternate.memoizedState||(ju=Ye())),4&r&&hu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Ki=(c=Ki)||f,mu(t,e),Ki=c):mu(t,e),vu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&0!=(1&e.mode))for(Ji=e,f=e.child;null!==f;){for(d=Ji=f;null!==Ji;){switch(h=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:Xi(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Es(r,n,e)}}break;case 5:Xi(p,p.return);break;case 22:if(null!==p.memoizedState){Cu(d);continue}}null!==h?(h.return=p,Ji=h):Cu(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(l=a.style).setProperty?l.setProperty("display","none","important"):l.display="none":(u=d.stateNode,i=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=me("display",i))}catch(t){Es(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Es(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mu(t,e),vu(e),4&r&&hu(e);case 21:}}function vu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(lu(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),su(e,iu(e),a);break;case 3:case 4:var l=r.stateNode.containerInfo;uu(e,iu(e),l);break;default:throw Error(o(161))}}catch(t){Es(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yu(e,t,n){Ji=e,bu(e,t,n)}function bu(e,t,n){for(var r=0!=(1&e.mode);null!==Ji;){var a=Ji,o=a.child;if(22===a.tag&&r){var l=null!==a.memoizedState||Zi;if(!l){var i=a.alternate,u=null!==i&&null!==i.memoizedState||Ki;i=Zi;var s=Ki;if(Zi=l,(Ki=u)&&!s)for(Ji=a;null!==Ji;)u=(l=Ji).child,22===l.tag&&null!==l.memoizedState?wu(a):null!==u?(u.return=l,Ji=u):wu(a);for(;null!==o;)Ji=o,bu(o,t,n),o=o.sibling;Ji=a,Zi=i,Ki=s}Au(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Ji=o):Au(e)}}function Au(e){for(;null!==Ji;){var t=Ji;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ki||ru(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Ki)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:vo(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var l=t.updateQueue;null!==l&&Fo(t,l,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Fo(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Ht(d)}}}break;default:throw Error(o(163))}Ki||512&t.flags&&au(t)}catch(e){Es(t,t.return,e)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function Cu(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function wu(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ru(4,t)}catch(e){Es(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Es(t,a,e)}}var o=t.return;try{au(t)}catch(e){Es(t,o,e)}break;case 5:var l=t.return;try{au(t)}catch(e){Es(t,l,e)}}}catch(e){Es(t,t.return,e)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var ku,Eu=Math.ceil,xu=A.ReactCurrentDispatcher,Su=A.ReactCurrentOwner,_u=A.ReactCurrentBatchConfig,Ou=0,Nu=null,Pu=null,Ru=0,Tu=0,zu=Ea(0),Lu=0,Iu=null,Bu=0,Uu=0,Mu=0,Fu=null,Du=null,ju=0,Hu=1/0,Wu=null,Vu=!1,qu=null,$u=null,Qu=!1,Gu=null,Zu=0,Ku=0,Yu=null,Ju=-1,Xu=0;function es(){return 0!=(6&Ou)?Ye():-1!==Ju?Ju:Ju=Ye()}function ts(e){return 0==(1&e.mode)?1:0!=(2&Ou)&&0!==Ru?Ru&-Ru:null!==go.transition?(0===Xu&&(Xu=mt()),Xu):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function ns(e,t,n,r){if(50<Ku)throw Ku=0,Yu=null,Error(o(185));vt(e,n,r),0!=(2&Ou)&&e===Nu||(e===Nu&&(0==(2&Ou)&&(Uu|=n),4===Lu&&is(e,Ru)),rs(e,r),1===n&&0===Ou&&0==(1&t.mode)&&(Hu=Ye()+500,Fa&&Ha()))}function rs(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-lt(o),i=1<<l,u=a[l];-1===u?0!=(i&n)&&0==(i&r)||(a[l]=pt(i,t)):u<=t&&(e.expiredLanes|=i),o&=~i}}(e,t);var r=dt(e,e===Nu?Ru:0);if(0===r)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Fa=!0,ja(e)}(us.bind(null,e)):ja(us.bind(null,e)),la((function(){0==(6&Ou)&&Ha()})),n=null;else{switch(At(r)){case 1:n=Xe;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ns(n,as.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function as(e,t){if(Ju=-1,Xu=0,0!=(6&Ou))throw Error(o(327));var n=e.callbackNode;if(ws()&&e.callbackNode!==n)return null;var r=dt(e,e===Nu?Ru:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var a=Ou;Ou|=2;var l=hs();for(Nu===e&&Ru===t||(Wu=null,Hu=Ye()+500,ds(e,t));;)try{ys();break}catch(t){ps(e,t)}wo(),xu.current=l,Ou=a,null!==Pu?t=0:(Nu=null,Ru=0,t=Lu)}if(0!==t){if(2===t&&(0!==(a=ht(e))&&(r=a,t=os(e,a))),1===t)throw n=Iu,ds(e,0),is(e,r),rs(e,Ye()),n;if(6===t)is(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!ir(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gs(e,r))&&(0!==(l=ht(e))&&(r=l,t=os(e,l))),1===t))throw n=Iu,ds(e,0),is(e,r),rs(e,Ye()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:Cs(e,Du,Wu);break;case 3:if(is(e,r),(130023424&r)===r&&10<(t=ju+500-Ye())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){es(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Cs.bind(null,e,Du,Wu),t);break}Cs(e,Du,Wu);break;case 4:if(is(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-lt(r);l=1<<i,(i=t[i])>a&&(a=i),r&=~l}if(r=a,10<(r=(120>(r=Ye()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Eu(r/1960))-r)){e.timeoutHandle=ra(Cs.bind(null,e,Du,Wu),r);break}Cs(e,Du,Wu);break;default:throw Error(o(329))}}}return rs(e,Ye()),e.callbackNode===n?as.bind(null,e):null}function os(e,t){var n=Fu;return e.current.memoizedState.isDehydrated&&(ds(e,t).flags|=256),2!==(e=gs(e,t))&&(t=Du,Du=n,null!==t&&ls(t)),e}function ls(e){null===Du?Du=e:Du.push.apply(Du,e)}function is(e,t){for(t&=~Mu,t&=~Uu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),r=1<<n;e[n]=-1,t&=~r}}function us(e){if(0!=(6&Ou))throw Error(o(327));ws();var t=dt(e,0);if(0==(1&t))return rs(e,Ye()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=os(e,r))}if(1===n)throw n=Iu,ds(e,0),is(e,t),rs(e,Ye()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cs(e,Du,Wu),rs(e,Ye()),null}function ss(e,t){var n=Ou;Ou|=1;try{return e(t)}finally{0===(Ou=n)&&(Hu=Ye()+500,Fa&&Ha())}}function cs(e){null!==Gu&&0===Gu.tag&&0==(6&Ou)&&ws();var t=Ou;Ou|=1;var n=_u.transition,r=bt;try{if(_u.transition=null,bt=1,e)return e()}finally{bt=r,_u.transition=n,0==(6&(Ou=t))&&Ha()}}function fs(){Tu=zu.current,xa(zu)}function ds(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Pu)for(n=Pu.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&za();break;case 3:ol(),xa(Na),xa(Oa),fl();break;case 5:il(r);break;case 4:ol();break;case 13:case 19:xa(ul);break;case 10:ko(r.type._context);break;case 22:case 23:fs()}n=n.return}if(Nu=e,Pu=e=zs(e.current,null),Ru=Tu=t,Lu=0,Iu=null,Mu=Uu=Bu=0,Du=Fu=null,null!==_o){for(t=0;t<_o.length;t++)if(null!==(r=(n=_o[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var l=o.next;o.next=a,r.next=l}n.pending=r}_o=null}return e}function ps(e,t){for(;;){var n=Pu;try{if(wo(),dl.current=li,yl){for(var r=ml.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}yl=!1}if(hl=0,vl=gl=ml=null,bl=!1,Al=0,Su.current=null,null===n||null===n.return){Lu=1,Iu=t,Pu=null;break}e:{var l=e,i=n.return,u=n,s=t;if(t=Ru,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,f=u,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=vi(i);if(null!==h){h.flags&=-257,yi(h,i,u,0,t),1&h.mode&&gi(l,c,t),s=c;var m=(t=h).updateQueue;if(null===m){var g=new Set;g.add(s),t.updateQueue=g}else m.add(s);break e}if(0==(1&t)){gi(l,c,t),ms();break e}s=Error(o(426))}else if(ao&&1&u.mode){var v=vi(i);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),yi(v,i,u,0,t),mo(ci(s,u));break e}}l=s=ci(s,u),4!==Lu&&(Lu=2),null===Fu?Fu=[l]:Fu.push(l),l=i;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,Uo(l,hi(0,s,t));break e;case 1:u=s;var y=l.type,b=l.stateNode;if(0==(128&l.flags)&&("function"==typeof y.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===$u||!$u.has(b)))){l.flags|=65536,t&=-t,l.lanes|=t,Uo(l,mi(l,u,t));break e}}l=l.return}while(null!==l)}As(n)}catch(e){t=e,Pu===n&&null!==n&&(Pu=n=n.return);continue}break}}function hs(){var e=xu.current;return xu.current=li,null===e?li:e}function ms(){0!==Lu&&3!==Lu&&2!==Lu||(Lu=4),null===Nu||0==(268435455&Bu)&&0==(268435455&Uu)||is(Nu,Ru)}function gs(e,t){var n=Ou;Ou|=2;var r=hs();for(Nu===e&&Ru===t||(Wu=null,ds(e,t));;)try{vs();break}catch(t){ps(e,t)}if(wo(),Ou=n,xu.current=r,null!==Pu)throw Error(o(261));return Nu=null,Ru=0,Lu}function vs(){for(;null!==Pu;)bs(Pu)}function ys(){for(;null!==Pu&&!Ze();)bs(Pu)}function bs(e){var t=ku(e.alternate,e,Tu);e.memoizedProps=e.pendingProps,null===t?As(e):Pu=t,Su.current=null}function As(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Qi(n,t,Tu)))return void(Pu=n)}else{if(null!==(n=Gi(n,t)))return n.flags&=32767,void(Pu=n);if(null===e)return Lu=6,void(Pu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Pu=t);Pu=t=e}while(null!==t);0===Lu&&(Lu=5)}function Cs(e,t,n){var r=bt,a=_u.transition;try{_u.transition=null,bt=1,function(e,t,n,r){do{ws()}while(null!==Gu);if(0!=(6&Ou))throw Error(o(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var l=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-lt(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,l),e===Nu&&(Pu=Nu=null,Ru=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Qu||(Qu=!0,Ns(tt,(function(){return ws(),null}))),l=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||l){l=_u.transition,_u.transition=null;var i=bt;bt=1;var u=Ou;Ou|=4,Su.current=null,function(e,t){if(ea=Vt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,l=r.focusNode;r=r.focusOffset;try{n.nodeType,l.nodeType}catch(e){n=null;break e}var i=0,u=-1,s=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==a&&3!==d.nodeType||(u=i+a),d!==l||0!==r&&3!==d.nodeType||(s=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++c===a&&(u=i),p===l&&++f===r&&(s=i),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Vt=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,v=m.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:vo(t.type,g),v);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var A=t.stateNode.containerInfo;1===A.nodeType?A.textContent="":9===A.nodeType&&A.documentElement&&A.removeChild(A.documentElement);break;default:throw Error(o(163))}}catch(e){Es(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tu,tu=!1}(e,n),gu(n,e),hr(ta),Vt=!!ea,ta=ea=null,e.current=n,yu(n,e,a),Ke(),Ou=u,bt=i,_u.transition=l}else e.current=n;if(Qu&&(Qu=!1,Gu=e,Zu=a),0===(l=e.pendingLanes)&&($u=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),rs(e,Ye()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)a=t[n],r(a.value,{componentStack:a.stack,digest:a.digest});if(Vu)throw Vu=!1,e=qu,qu=null,e;0!=(1&Zu)&&0!==e.tag&&ws(),0!=(1&(l=e.pendingLanes))?e===Yu?Ku++:(Ku=0,Yu=e):Ku=0,Ha()}(e,t,n,r)}finally{_u.transition=a,bt=r}return null}function ws(){if(null!==Gu){var e=At(Zu),t=_u.transition,n=bt;try{if(_u.transition=null,bt=16>e?16:e,null===Gu)var r=!1;else{if(e=Gu,Gu=null,Zu=0,0!=(6&Ou))throw Error(o(331));var a=Ou;for(Ou|=4,Ji=e.current;null!==Ji;){var l=Ji,i=l.child;if(0!=(16&Ji.flags)){var u=l.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Ji=c;null!==Ji;){var f=Ji;switch(f.tag){case 0:case 11:case 15:nu(8,f,l)}var d=f.child;if(null!==d)d.return=f,Ji=d;else for(;null!==Ji;){var p=(f=Ji).sibling,h=f.return;if(ou(f),f===c){Ji=null;break}if(null!==p){p.return=h,Ji=p;break}Ji=h}}}var m=l.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var v=g.sibling;g.sibling=null,g=v}while(null!==g)}}Ji=l}}if(0!=(2064&l.subtreeFlags)&&null!==i)i.return=l,Ji=i;else e:for(;null!==Ji;){if(0!=(2048&(l=Ji).flags))switch(l.tag){case 0:case 11:case 15:nu(9,l,l.return)}var y=l.sibling;if(null!==y){y.return=l.return,Ji=y;break e}Ji=l.return}}var b=e.current;for(Ji=b;null!==Ji;){var A=(i=Ji).child;if(0!=(2064&i.subtreeFlags)&&null!==A)A.return=i,Ji=A;else e:for(i=b;null!==Ji;){if(0!=(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){Es(u,u.return,e)}if(u===i){Ji=null;break e}var C=u.sibling;if(null!==C){C.return=u.return,Ji=C;break e}Ji=u.return}}if(Ou=a,Ha(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,_u.transition=t}}return!1}function ks(e,t,n){e=Io(e,t=hi(0,t=ci(n,t),1),1),t=es(),null!==e&&(vt(e,1,t),rs(e,t))}function Es(e,t,n){if(3===e.tag)ks(e,e,n);else for(;null!==t;){if(3===t.tag){ks(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$u||!$u.has(r))){t=Io(t,e=mi(t,e=ci(n,e),1),1),e=es(),null!==t&&(vt(t,1,e),rs(t,e));break}}t=t.return}}function xs(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=es(),e.pingedLanes|=e.suspendedLanes&n,Nu===e&&(Ru&n)===n&&(4===Lu||3===Lu&&(130023424&Ru)===Ru&&500>Ye()-ju?ds(e,0):Mu|=n),rs(e,t)}function Ss(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=es();null!==(e=Po(e,t))&&(vt(e,t,n),rs(e,n))}function _s(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ss(e,n)}function Os(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),Ss(e,n)}function Ns(e,t){return Qe(e,t)}function Ps(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rs(e,t,n,r){return new Ps(e,t,n,r)}function Ts(e){return!(!(e=e.prototype)||!e.isReactComponent)}function zs(e,t){var n=e.alternate;return null===n?((n=Rs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ls(e,t,n,r,a,l){var i=2;if(r=e,"function"==typeof e)Ts(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case k:return Is(n.children,a,l,t);case E:i=8,a|=8;break;case x:return(e=Rs(12,n,t,2|a)).elementType=x,e.lanes=l,e;case N:return(e=Rs(13,n,t,a)).elementType=N,e.lanes=l,e;case P:return(e=Rs(19,n,t,a)).elementType=P,e.lanes=l,e;case z:return Bs(n,a,l,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case S:i=10;break e;case _:i=9;break e;case O:i=11;break e;case R:i=14;break e;case T:i=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Rs(i,n,t,a)).elementType=e,t.type=r,t.lanes=l,t}function Is(e,t,n,r){return(e=Rs(7,e,r,t)).lanes=n,e}function Bs(e,t,n,r){return(e=Rs(22,e,r,t)).elementType=z,e.lanes=n,e.stateNode={isHidden:!1},e}function Us(e,t,n){return(e=Rs(6,e,null,t)).lanes=n,e}function Ms(e,t,n){return(t=Rs(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fs(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Ds(e,t,n,r,a,o,l,i,u){return e=new Fs(e,t,n,i,u),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Rs(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},To(o),e}function js(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Hs(e){if(!e)return _a;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ta(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Ta(n))return Ia(e,n,t)}return t}function Ws(e,t,n,r,a,o,l,i,u){return(e=Ds(n,r,!0,e,0,o,0,i,u)).context=Hs(null),n=e.current,(o=Lo(r=es(),a=ts(n))).callback=null!=t?t:null,Io(n,o,a),e.current.lanes=a,vt(e,a,r),rs(e,r),e}function Vs(e,t,n,r){var a=t.current,o=es(),l=ts(a);return n=Hs(n),null===t.context?t.context=n:t.pendingContext=n,(t=Lo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Io(a,t,l))&&(ns(e,a,l,o),Bo(e,a,l)),l}function qs(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function $s(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Qs(e,t){$s(e,t),(e=e.alternate)&&$s(e,t)}ku=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Na.current)Ai=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return Ai=!1,function(e,t,n){switch(t.tag){case 3:Pi(t),ho();break;case 5:ll(t);break;case 1:Ta(t.type)&&Ba(t);break;case 4:al(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Sa(yo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Sa(ul,1&ul.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Ui(e,t,n):(Sa(ul,1&ul.current),null!==(e=Vi(e,t,n))?e.sibling:null);Sa(ul,1&ul.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Hi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Sa(ul,ul.current),r)break;return null;case 22:case 23:return t.lanes=0,xi(e,t,n)}return Vi(e,t,n)}(e,t,n);Ai=0!=(131072&e.flags)}else Ai=!1,ao&&0!=(1048576&t.flags)&&Xa(t,$a,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Wi(e,t),e=t.pendingProps;var a=Ra(t,Oa.current);xo(t,n),a=El(null,t,r,e,a,n);var l=xl();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ta(r)?(l=!0,Ba(t)):l=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,To(t),a.updater=Ho,t.stateNode=a,a._reactInternals=t,$o(t,r,e,n),t=Ni(null,t,r,!0,l,n)):(t.tag=0,ao&&l&&eo(t),Ci(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Wi(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Ts(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===R)return 14}return 2}(r),e=vo(r,e),a){case 0:t=_i(null,t,r,e,n);break e;case 1:t=Oi(null,t,r,e,n);break e;case 11:t=wi(null,t,r,e,n);break e;case 14:t=ki(null,t,r,vo(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,_i(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 1:return r=t.type,a=t.pendingProps,Oi(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 3:e:{if(Pi(t),null===e)throw Error(o(387));r=t.pendingProps,a=(l=t.memoizedState).element,zo(e,t),Mo(t,r,null,n);var i=t.memoizedState;if(r=i.element,l.isDehydrated){if(l={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=l,t.memoizedState=l,256&t.flags){t=Ri(e,t,r,n,a=ci(Error(o(423)),t));break e}if(r!==a){t=Ri(e,t,r,n,a=ci(Error(o(424)),t));break e}for(ro=sa(t.stateNode.containerInfo.firstChild),no=t,ao=!0,oo=null,n=Jo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ho(),r===a){t=Vi(e,t,n);break e}Ci(e,t,r,n)}t=t.child}return t;case 5:return ll(t),null===e&&so(t),r=t.type,a=t.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,na(r,a)?i=null:null!==l&&na(r,l)&&(t.flags|=32),Si(e,t),Ci(e,t,i,n),t.child;case 6:return null===e&&so(t),null;case 13:return Ui(e,t,n);case 4:return al(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Yo(t,null,r,n):Ci(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,wi(e,t,r,a=t.elementType===r?a:vo(r,a),n);case 7:return Ci(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ci(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,l=t.memoizedProps,i=a.value,Sa(yo,r._currentValue),r._currentValue=i,null!==l)if(ir(l.value,i)){if(l.children===a.children&&!Na.current){t=Vi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){i=l.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===l.tag){(s=Lo(-1,n&-n)).tag=2;var c=l.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?s.next=s:(s.next=f.next,f.next=s),c.pending=s}}l.lanes|=n,null!==(s=l.alternate)&&(s.lanes|=n),Eo(l.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===l.tag)i=l.type===t.type?null:l.child;else if(18===l.tag){if(null===(i=l.return))throw Error(o(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Eo(i,n,t),i=l.sibling}else i=l.child;if(null!==i)i.return=l;else for(i=l;null!==i;){if(i===t){i=null;break}if(null!==(l=i.sibling)){l.return=i.return,i=l;break}i=i.return}l=i}Ci(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,xo(t,n),r=r(a=So(a)),t.flags|=1,Ci(e,t,r,n),t.child;case 14:return a=vo(r=t.type,t.pendingProps),ki(e,t,r,a=vo(r.type,a),n);case 15:return Ei(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:vo(r,a),Wi(e,t),t.tag=1,Ta(r)?(e=!0,Ba(t)):e=!1,xo(t,n),Vo(t,r,a),$o(t,r,a,n),Ni(null,t,r,!0,e,n);case 19:return Hi(e,t,n);case 22:return xi(e,t,n)}throw Error(o(156,t.tag))};var Gs="function"==typeof reportError?reportError:function(e){console.error(e)};function Zs(e){this._internalRoot=e}function Ks(e){this._internalRoot=e}function Ys(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Js(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xs(){}function ec(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o;if("function"==typeof a){var i=a;a=function(){var e=qs(l);i.call(e)}}Vs(t,l,e,a)}else l=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=qs(l);o.call(e)}}var l=Ws(t,r,e,0,null,!1,0,"",Xs);return e._reactRootContainer=l,e[ha]=l.current,Hr(8===e.nodeType?e.parentNode:e),cs(),l}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=qs(u);i.call(e)}}var u=Ds(e,0,!1,null,0,!1,0,"",Xs);return e._reactRootContainer=u,e[ha]=u.current,Hr(8===e.nodeType?e.parentNode:e),cs((function(){Vs(t,u,n,r)})),u}(n,t,e,a,r);return qs(l)}Ks.prototype.render=Zs.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Vs(e,t,null,null)},Ks.prototype.unmount=Zs.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cs((function(){Vs(null,e,null,null)})),t[ha]=null}},Ks.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<zt.length&&0!==t&&t<zt[n].priority;n++);zt.splice(n,0,e),0===n&&Ut(e)}},Ct=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(yt(t,1|n),rs(t,Ye()),0==(6&Ou)&&(Hu=Ye()+500,Ha()))}break;case 13:cs((function(){var t=Po(e,1);if(null!==t){var n=es();ns(t,e,1,n)}})),Qs(e,1)}},wt=function(e){if(13===e.tag){var t=Po(e,134217728);if(null!==t)ns(t,e,134217728,es());Qs(e,134217728)}},kt=function(e){if(13===e.tag){var t=ts(e),n=Po(e,t);if(null!==n)ns(n,e,t,es());Qs(e,t)}},Et=function(){return bt},xt=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},we=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Ca(r);if(!a)throw Error(o(90));Q(r),J(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Oe=ss,Ne=cs;var tc={usingClientEntryPoint:!1,Events:[ba,Aa,Ca,Se,_e,ss]},nc={findFiberByHostInstance:ya,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=qe(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(rc),ot=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ys(t))throw Error(o(200));return js(e,t,null,n)},t.createRoot=function(e,t){if(!Ys(e))throw Error(o(299));var n=!1,r="",a=Gs;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Ds(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,Hr(8===e.nodeType?e.parentNode:e),new Zs(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=null===(e=qe(t))?null:e.stateNode},t.flushSync=function(e){return cs(e)},t.hydrate=function(e,t,n){if(!Js(t))throw Error(o(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ys(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,a=!1,l="",i=Gs;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(l=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Ws(t,null,e,1,null!=n?n:null,a,0,l,i),e[ha]=t.current,Hr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ks(t)},t.render=function(e,t,n){if(!Js(t))throw Error(o(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Js(e))throw Error(o(40));return!!e._reactRootContainer&&(cs((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=ss,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Js(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(3935);t.s=r.createRoot,r.hydrateRoot},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9559:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],o=e||"";t&&(o=r(e));n&&(o=a(o));return o};var n=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;function r(e){return e.toString().trim().replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,(function(e,t,r){return t>0&&t+e.length!==r.length&&e.search(n)>-1&&":"!==r.charAt(t-2)&&("-"!==r.charAt(t+e.length)||"-"===r.charAt(t-1))&&r.charAt(t-1).search(/[^\s-]/)<0?e.toLowerCase():e.substr(1).search(/[A-Z]|\../)>-1?e:e.charAt(0).toUpperCase()+e.substr(1)}))}function a(e){return"string"==typeof(t=e)&&-1!==t.indexOf("@")?(console.warn("This arg looks like an email address, redacting."),"REDACTED (Potential Email Address)"):e;var t}},1638:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.GA4=void 0;var r=s(n(6161)),a=s(n(9559)),o=["eventCategory","eventAction","eventLabel","eventValue","hitType"],l=["title","location"],i=["page","hitType"],u=["action","category","label","value","nonInteraction","transport"];function s(e){return e&&e.__esModule?e:{default:e}}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function d(e){return function(e){if(Array.isArray(e))return v(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||g(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var r,a,o=[],l=!0,i=!1;try{for(n=n.call(e);!(l=(r=n.next()).done)&&(o.push(r.value),!t||o.length!==t);l=!0);}catch(e){i=!0,a=e}finally{try{l||null==n.return||n.return()}finally{if(i)throw a}}return o}(e,t)||g(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t){if(e){if("string"==typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(e,t):void 0}}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"reset",(function(){t.isInitialized=!1,t._testMode=!1,t._currentMeasurementId,t._hasLoadedGA=!1,t._isQueuing=!1,t._queueGtag=[]})),b(this,"_gtag",(function(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];t._testMode||t._isQueuing?t._queueGtag.push(n):r.default.apply(void 0,n)})),b(this,"_loadGA",(function(e,n){if("undefined"!=typeof window&&"undefined"!=typeof document&&!t._hasLoadedGA){var r=document.createElement("script");r.async=!0,r.src="https://www.googletagmanager.com/gtag/js?id=".concat(e),n&&r.setAttribute("nonce",n),document.body.appendChild(r),window.dataLayer=window.dataLayer||[],window.gtag=function(){window.dataLayer.push(arguments)},t._hasLoadedGA=!0}})),b(this,"_toGtagOptions",(function(e){if(e){var t={cookieUpdate:"cookie_update",cookieExpires:"cookie_expires",cookieDomain:"cookie_domain",cookieFlags:"cookie_flags",userId:"user_id",clientId:"client_id",anonymizeIp:"anonymize_ip",contentGroup1:"content_group1",contentGroup2:"content_group2",contentGroup3:"content_group3",contentGroup4:"content_group4",contentGroup5:"content_group5",allowAdFeatures:"allow_google_signals",allowAdPersonalizationSignals:"allow_ad_personalization_signals",nonInteraction:"non_interaction",page:"page_path",hitCallback:"event_callback"};return Object.entries(e).reduce((function(e,n){var r=m(n,2),a=r[0],o=r[1];return t[a]?e[t[a]]=o:e[a]=o,e}),{})}})),b(this,"initialize",(function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)throw new Error("Require GA_MEASUREMENT_ID");var r="string"==typeof e?[{trackingId:e}]:e;t._currentMeasurementId=r[0].trackingId;var a=n.gaOptions,o=n.gtagOptions,l=n.legacyDimensionMetric,i=void 0===l||l,u=n.nonce,s=n.testMode,c=void 0!==s&&s;if(t._testMode=c,c||t._loadGA(t._currentMeasurementId,u),t.isInitialized||(t._gtag("js",new Date),r.forEach((function(e){var n=t._appendCustomMap(h(h(h({send_page_view:!1},t._toGtagOptions(h(h({},a),e.gaOptions))),o),e.gtagOptions),i);t._gtag("config",e.trackingId,n)}))),t.isInitialized=!0,!c){var f=d(t._queueGtag);for(t._queueGtag=[],t._isQueuing=!1;f.length;){var p=f.shift();t._gtag.apply(t,d(p)),"get"===p[0]&&(t._isQueuing=!0)}}})),b(this,"set",(function(e){e?"object"===f(e)?(0===Object.keys(e).length&&console.warn("empty `fieldsObject` given to .set()"),t._gaCommand("set",e)):console.warn("Expected `fieldsObject` arg to be an Object"):console.warn("`fieldsObject` is required in .set()")})),b(this,"_gaCommandSendEvent",(function(e,n,r,a,o){t._gtag("event",n,h(h({event_category:e,event_label:r,value:a},o&&{non_interaction:o.nonInteraction}),t._toGtagOptions(o)))})),b(this,"_gaCommandSendEventParameters",(function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];if("string"==typeof n[0])t._gaCommandSendEvent.apply(t,d(n.slice(1)));else{var a=n[0],l=a.eventCategory,i=a.eventAction,u=a.eventLabel,s=a.eventValue,f=(a.hitType,c(a,o));t._gaCommandSendEvent(l,i,u,s,f)}})),b(this,"_gaCommandSendTiming",(function(e,n,r,a){t._gtag("event","timing_complete",{name:n,value:r,event_category:e,event_label:a})})),b(this,"_gaCommandSendPageview",(function(e,n){if(n&&Object.keys(n).length){var r=t._toGtagOptions(n),a=r.title,o=r.location,i=c(r,l);t._gtag("event","page_view",h(h(h(h({},e&&{page_path:e}),a&&{page_title:a}),o&&{page_location:o}),i))}else e?t._gtag("event","page_view",{page_path:e}):t._gtag("event","page_view")})),b(this,"_gaCommandSendPageviewParameters",(function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];if("string"==typeof n[0])t._gaCommandSendPageview.apply(t,d(n.slice(1)));else{var a=n[0],o=a.page,l=(a.hitType,c(a,i));t._gaCommandSendPageview(o,l)}})),b(this,"_gaCommandSend",(function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var a="string"==typeof n[0]?n[0]:n[0].hitType;switch(a){case"event":t._gaCommandSendEventParameters.apply(t,n);break;case"pageview":t._gaCommandSendPageviewParameters.apply(t,n);break;case"timing":t._gaCommandSendTiming.apply(t,d(n.slice(1)));break;case"screenview":case"transaction":case"item":case"social":case"exception":console.warn("Unsupported send command: ".concat(a));break;default:console.warn("Send command doesn't exist: ".concat(a))}})),b(this,"_gaCommandSet",(function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];"string"==typeof n[0]&&(n[0]=b({},n[0],n[1])),t._gtag("set",t._toGtagOptions(n[0]))})),b(this,"_gaCommand",(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];switch(e){case"send":t._gaCommandSend.apply(t,r);break;case"set":t._gaCommandSet.apply(t,r);break;default:console.warn("Command doesn't exist: ".concat(e))}})),b(this,"ga",(function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];if("string"==typeof n[0])t._gaCommand.apply(t,n);else{var a=n[0];t._gtag("get",t._currentMeasurementId,"client_id",(function(e){t._isQueuing=!1;var n=t._queueGtag;for(a({get:function(n){return"clientId"===n?e:"trackingId"===n?t._currentMeasurementId:"apiVersion"===n?"1":void 0}});n.length;){var r=n.shift();t._gtag.apply(t,d(r))}})),t._isQueuing=!0}return t.ga})),b(this,"event",(function(e,n){if("string"==typeof e)t._gtag("event",e,t._toGtagOptions(n));else{var r=e.action,o=e.category,l=e.label,i=e.value,s=e.nonInteraction,f=e.transport,d=c(e,u);if(!o||!r)return void console.warn("args.category AND args.action are required in event()");var p={hitType:"event",eventCategory:(0,a.default)(o),eventAction:(0,a.default)(r)};l&&(p.eventLabel=(0,a.default)(l)),void 0!==i&&("number"!=typeof i?console.warn("Expected `args.value` arg to be a Number."):p.eventValue=i),void 0!==s&&("boolean"!=typeof s?console.warn("`args.nonInteraction` must be a boolean."):p.nonInteraction=s),void 0!==f&&("string"!=typeof f?console.warn("`args.transport` must be a string."):(-1===["beacon","xhr","image"].indexOf(f)&&console.warn("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`"),p.transport=f)),Object.keys(d).filter((function(e){return"dimension"===e.substr(0,"dimension".length)})).forEach((function(e){p[e]=d[e]})),Object.keys(d).filter((function(e){return"metric"===e.substr(0,"metric".length)})).forEach((function(e){p[e]=d[e]})),t._gaCommand("send",p)}})),b(this,"send",(function(e){t._gaCommand("send",e)})),b(this,"pageview",(function(e,n,r){var a=null==e?void 0:e.trim();""!==a?t._gaCommand("send","pageview",a,{title:r}):console.warn("path cannot be an empty string in .pageview()")})),this.reset()}var t,n,s;return t=e,n=[{key:"gtag",value:function(){this._gtag.apply(this,arguments)}},{key:"_appendCustomMap",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!t)return e;e.custom_map||(e.custom_map={});for(var n=1;n<=200;n++)e.custom_map["dimension".concat(n)]||(e.custom_map["dimension".concat(n)]="dimension".concat(n)),e.custom_map["metric".concat(n)]||(e.custom_map["metric".concat(n)]="metric".concat(n));return e}},{key:"outboundLink",value:function(e,t){var n=e.label;if("function"==typeof t)if(n){var r={hitType:"event",eventCategory:"Outbound",eventAction:"Click",eventLabel:(0,a.default)(n)},o=!1,l=setTimeout((function(){o=!0,t()}),250);r.hitCallback=function(){clearTimeout(l),o||t()},this._gaCommand("send",r)}else console.warn("args.label is required in outboundLink()");else console.warn("hitCallback function is required")}}],n&&y(t.prototype,n),s&&y(t,s),e}();t.GA4=A;var C=new A;t.default=C},6161:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r;"undefined"!=typeof window&&(void 0===window.gtag&&(window.dataLayer=window.dataLayer||[],window.gtag=function(){window.dataLayer.push(arguments)}),(r=window).gtag.apply(r,t))};t.default=n},9089:(e,t,n)=>{"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}t.ZP=void 0;var a=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var n=o(t);if(n&&n.has(e))return n.get(e);var a={},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var u=l?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(a,i,u):a[i]=e[i]}a.default=e,n&&n.set(e,a);return a}(n(1638));function o(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(o=function(e){return e?n:t})(e)}a.GA4;var l=a.default;t.ZP=l},2408:(e,t)=>{"use strict";
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var A=b.prototype=new y;A.constructor=b,m(A,v.prototype),A.isPureReactComponent=!0;var C=Array.isArray,w=Object.prototype.hasOwnProperty,k={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var a,o={},l=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)w.call(t,a)&&!E.hasOwnProperty(a)&&(o[a]=t[a]);var u=arguments.length-2;if(1===u)o.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===o[a]&&(o[a]=u[a]);return{$$typeof:n,type:e,key:l,ref:i,props:o,_owner:k.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var _=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,a,o,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return l=l(u=e),e=""===o?"."+O(u,0):o,C(l)?(a="",null!=e&&(a=e.replace(_,"$&/")+"/"),N(l,t,a,"",(function(e){return e}))):null!=l&&(S(l)&&(l=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,a+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(_,"$&/")+"/")+e)),t.push(l)),1;if(u=0,o=""===o?".":o+":",C(e))for(var s=0;s<e.length;s++){var c=o+O(i=e[s],s);u+=N(i,t,a,c,l)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(i=e.next()).done;)u+=N(i=i.value,t,a,c=o+O(i,s++),l);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function P(e,t,n){if(null==e)return e;var r=[],a=0;return N(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var T={current:null},z={transition:null},L={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:z,ReactCurrentOwner:k};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=a,t.Profiler=l,t.PureComponent=b,t.StrictMode=o,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),o=e.key,l=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,i=k.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)w.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];a.children=u}return{$$typeof:n,type:e.type,key:o,ref:l,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=z.transition;z.transition={};try{e()}finally{z.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return T.current.useCallback(e,t)},t.useContext=function(e){return T.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return T.current.useDeferredValue(e)},t.useEffect=function(e,t){return T.current.useEffect(e,t)},t.useId=function(){return T.current.useId()},t.useImperativeHandle=function(e,t,n){return T.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return T.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return T.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return T.current.useMemo(e,t)},t.useReducer=function(e,t,n){return T.current.useReducer(e,t,n)},t.useRef=function(e){return T.current.useRef(e)},t.useState=function(e){return T.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return T.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return T.current.useTransition()},t.version="18.2.0"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,l=a>>>1;r<l;){var i=2*(r+1)-1,u=e[i],s=i+1,c=e[s];if(0>o(u,n))s<a&&0>o(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[i]=n,r=i);else{if(!(s<a&&0>o(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var s=[],c=[],f=1,d=null,p=3,h=!1,m=!1,g=!1,v="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function A(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function C(e){if(g=!1,A(e),!m)if(null!==r(s))m=!0,z(w);else{var t=r(c);null!==t&&L(C,t.startTime-e)}}function w(e,n){m=!1,g&&(g=!1,y(S),S=-1),h=!0;var o=p;try{for(A(n),d=r(s);null!==d&&(!(d.expirationTime>n)||e&&!N());){var l=d.callback;if("function"==typeof l){d.callback=null,p=d.priorityLevel;var i=l(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?d.callback=i:d===r(s)&&a(s),A(n)}else a(s);d=r(s)}if(null!==d)var u=!0;else{var f=r(c);null!==f&&L(C,f.startTime-n),u=!1}return u}finally{d=null,p=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,E=!1,x=null,S=-1,_=5,O=-1;function N(){return!(t.unstable_now()-O<_)}function P(){if(null!==x){var e=t.unstable_now();O=e;var n=!0;try{n=x(!0,e)}finally{n?k():(E=!1,x=null)}}else E=!1}if("function"==typeof b)k=function(){b(P)};else if("undefined"!=typeof MessageChannel){var R=new MessageChannel,T=R.port2;R.port1.onmessage=P,k=function(){T.postMessage(null)}}else k=function(){v(P,0)};function z(e){x=e,E||(E=!0,k())}function L(e,n){S=v((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||h||(m=!0,z(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):_=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,o){var l=t.unstable_now();switch("object"==typeof o&&null!==o?o="number"==typeof(o=o.delay)&&0<o?l+o:l:o=l,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>l?(e.sortIndex=o,n(c,e),null===r(s)&&e===r(c)&&(g?(y(S),S=-1):g=!0,L(C,o-l))):(e.sortIndex=i,n(s,e),m||h||(m=!0,z(w))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},l=[],i=0;i<e.length;i++){var u=e[i],s=r.base?u[0]+r.base:u[0],c=o[s]||0,f="".concat(s," ").concat(c);o[s]=c+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var h=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:f,updater:h,references:1})}l.push(f)}return l}function a(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var l=0;l<o.length;l++){var i=n(o[l]);t[i].references--}for(var u=r(e,a),s=0;s<o.length;s++){var c=n(o[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(7294),t=n(745);const r=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 70.981 76.873"},e.createElement("path",{id:"keyboard_double_arrow_right_FILL0_wght400_GRAD0_opsz48",d:"M16.222,88.823,10.65,82.1l26.27-31.71L10.65,18.676l5.572-6.726L48.064,50.386Zm33.567,0L44.217,82.1l26.27-31.71-26.27-31.71,5.572-6.726L81.631,50.386Z",transform:"translate(-10.65 -11.95)",fill:"#3cc"})),a=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"22.797",height:"24",viewBox:"0 0 22.797 24"},e.createElement("path",{id:"mop_FILL0_wght400_GRAD0_opsz48",d:"M12.865,12.909h3.273V5.273a1.6,1.6,0,0,0-.464-1.159A1.566,1.566,0,0,0,14.5,3.636a1.6,1.6,0,0,0-1.159.464,1.566,1.566,0,0,0-.477,1.173ZM6.32,17.818H22.683V14.545H6.32ZM4.574,24.364H8.229V21.909a.818.818,0,1,1,1.636,0v2.455h3.818V21.909a.818.818,0,1,1,1.636,0v2.455h3.818V21.909a.818.818,0,1,1,1.636,0v2.455h3.655l-1.364-5.455H5.938ZM23.72,26H5.283a2.07,2.07,0,0,1-1.718-.845,2.066,2.066,0,0,1-.382-1.882l1.5-6V15.091a2.188,2.188,0,0,1,2.182-2.182h4.364V5.273a3.156,3.156,0,0,1,.955-2.318,3.292,3.292,0,0,1,4.636,0,3.156,3.156,0,0,1,.955,2.318v7.636h4.364a2.188,2.188,0,0,1,2.182,2.182v2.182l1.5,6A2.174,2.174,0,0,1,23.72,26ZM22.683,14.545h0Zm-6.545-1.636h0Z",transform:"translate(-3.103 -2)",fill:"#3cc"})),o=()=>e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"21.271",height:"24.63",viewBox:"0 0 21.271 24.63"},e.createElement("path",{id:"file_copy_FILL0_wght400_GRAD0_opsz48",d:"M23.592,23.271H9.038a1.722,1.722,0,0,1-1.679-1.679V3.679a1.611,1.611,0,0,1,.5-1.176A1.611,1.611,0,0,1,9.038,2h9.74l6.493,6.493v13.1a1.722,1.722,0,0,1-1.679,1.679ZM17.938,9.221V3.679h-8.9V21.592H23.592V9.221ZM5.679,26.63a1.611,1.611,0,0,1-1.176-.5A1.611,1.611,0,0,1,4,24.951V7.626H5.679V24.951H19.618V26.63ZM9.038,3.679v0Z",transform:"translate(-4 -2)",fill:"#3cc"}));var l=n(3379),i=n.n(l),u=n(7795),s=n.n(u),c=n(569),f=n.n(c),d=n(3565),p=n.n(d),h=n(9216),m=n.n(h),g=n(4589),v=n.n(g),y=n(1093),b={};b.styleTagTransform=v(),b.setAttributes=p(),b.insert=f().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=m();i()(y.Z,b);const A=y.Z&&y.Z.locals?y.Z.locals:void 0;class C extends e.Component{render(){return e.createElement("button",{type:this.props.type,className:A.button,onClick:()=>this.props.onClick()},"clean"===this.props.icon?e.createElement(a,null):e.createElement(o,null),e.createElement("small",null,this.props.label))}}class w extends e.Component{render(){return e.createElement("h2",{id:this.props.id,className:A.heading},this.props.text)}}const k={normal:[["あ","A","い","I","う","U","え","E","お","O"],["か","KA","き","KI","く","KU","け","KE","こ","KO"],["さ","SA","し","SHI","す","SU","せ","SE","そ","SO"],["た","TA","ち","CHI","つ","TSU","て","TE","と","TO"],["な","NA","に","NI","ぬ","NU","ね","NE","の","NO"],["は","HA","ひ","HI","ふ","FU","へ","HE","ほ","HO"],["ま","MA","み","MI","む","MU","め","ME","も","MO"],["や","YA","","","ゆ","YU","","","よ","YO"],["ら","RA","り","RI","る","RU","れ","RE","ろ","RO"],["ら","RA","り","RI","る","RU","れ","RE","ろ","RO"],["わ","WA","ヰ","I","","","ヱ","E","ヲ","O"],["ん","N","","","","","","","",""]],dakuonAndHandakuon:[["が","GA","ぎ","GI","ぐ","GU","げ","GE","ご","GO"],["ざ","ZA","じ","JI","ず","ZU","ぜ","ZE","ぞ","ZO"],["だ","DA","ぢ","JI","づ","ZU","で","DE","ど","DO"],["ば","BA","び","BI","ぶ","BU","べ","BE","ぼ","BO"],["ぱ","PA","ぴ","PI","ぷ","PU","ぺ","PE","ぽ","PO"]],yon:[["きゃ","KYA","","","きゅ","KYA","","","きょ","KYA"],["しゃ","SHA","","","しゅ","SHU","","","しょ","SHO"],["ちゃ","CHA","","","ちゅ","CHU","","","ちょ","CHO"],["にゃ","NYA","","","にゅ","NYU","","","にょ","NYO"],["ひゃ","HYA","","","ひゅ","HYU","","","ひょ","HYO"],["みゃ","MYA","","","みゅ","MYU","","","みょ","MYO"],["りゃ","RYA","","","りゅ","RYU","","","りょ","RYO"],["ぎゃ","GYA","","","ぎゅ","GYU","","","ぎょ","GYO"],["じゃ","JA","","","じゅ","JU","","","じょ","JO"],["びゃ","BYA","","","びゅ","BYU","","","びょ","BYO"],["ぴゃ","PYA","","","ぴゅ","PYU","","","ぴょ","PYO"]],other:[["しぇ","SHIE","ちぇ","CHIE","てぃ","TEI","にぃ","NII","にぇ","NIE"],["ふぁ","FUA","ふぃ","FUI","ふぇ","FUE","ふぉ","FUO","じぇ","JIE"],["でぃ","DEI","でゅ","DEYU","うぃ","UI","うぇ","UE","うぉ","UO"],["ゔぁ","BA","ゔぁ","BI","ゔ","BU","ゔぇ","BE","ゔぇ","BO"],["ゔぁ","BUA","ゔぁ","BUI","","","ゔぇ","BUE","ゔぇ","BUO"]]};class E extends e.Component{render(){return e.createElement("table",{className:A.table},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("td",{className:A.tableHeader,colSpan:10},"50音順")),k.normal.map(((t,n)=>e.createElement("tr",{key:n},t.map(((t,n)=>e.createElement("td",{key:n},t)))))),e.createElement("tr",null,e.createElement("td",{className:A.tableHeader,colSpan:10},"濁音・半濁音")),k.dakuonAndHandakuon.map(((t,n)=>e.createElement("tr",{key:n},t.map(((t,n)=>e.createElement("td",{key:n},t)))))),e.createElement("tr",null,e.createElement("td",{className:A.tableHeader,colSpan:10},"拗音")),k.yon.map(((t,n)=>e.createElement("tr",{key:n},t.map(((t,n)=>e.createElement("td",{key:n},t)))))),e.createElement("tr",null,e.createElement("td",{className:A.tableHeader,colSpan:10},"その他")),k.other.map(((t,n)=>e.createElement("tr",{key:n},t.map(((t,n)=>e.createElement("td",{key:n},t))))))))}}class x extends e.Component{render(){return e.createElement("label",{className:A.check},e.createElement("input",{type:"checkbox",onChange:e=>this.props.onChange(e.target.checked)}),e.createElement("span",null,this.props.label))}}var S=n(9089);class _ extends e.Component{render(){return e.createElement("ul",{className:A.list},e.createElement("li",null,"B, M, Pの前の「ん」はNではなくMで表記する。",e.createElement("p",null,"例：NAMBA（ナンバ）、HOMMA（ホンマ）、SAMPEI（サンペイ）")),e.createElement("li",null,"促音は子音を重ねて表記する。ただし、CHI, CHA, CHUの前にはTで表記する。",e.createElement("p",null,"例：HATTORI（ハットリ）、KIKKAWA（キッカワ）／HATCHI（ホッチ）、HATCHO（ハッチョウ）")),e.createElement("li",null,"OやUの長音は表記しない。ただし、末尾がOOで読みが「オオ」の場合はOOと表記する。",e.createElement("p",null,"例：YUKI（ユウキ）、YUKO（ユウコ）、KOTA(コウタ)、YOKO（ヨウコ）、ONISHI（オオニシ）／SENOO（セノオ）、TAKATOO（タカトオ）")),e.createElement("li",null,"長音符は省略する。ただし、長音符を使用しない長音の場合は省略しない。",e.createElement("p",null,"例：NINA（ニーナ）、SHINA（シーナ）／NIINA（ニイナ）、SHIINA（シイナ）")),e.createElement("li",null,e.createElement("strong",null,"井上（いのうえ）、滝上（たきのうえ）のような「*のうえ」という名字の場合、[OU]が[O]に変換されると[INOE][TAKINOE]という表記になります。",e.createElement("br",null),"上記を防ぐため例外的に[NOUE]という文字列の場合は[OU]を[O]に変換しないようにしています。")))}}class O extends e.Component{render(){return e.createElement("ul",{className:A.list},e.createElement("li",null,"変換処理をクライアント側で実施しているため、入力値はサーバーへは送信されません。"),e.createElement("li",null,"本サイトは素人が作成したサイトです。変換結果をコピーする場合は一度変換結果をご確認ください。"),e.createElement("li",null,"本サイトにおける不具合を見つけた方は",e.createElement("a",{href:"https://github.com/m1y474/hepburn-romanization/issues/new?title=不具合報告",rel:"noopener noreferrer",target:"_blank"},"GitHub"),"にてご報告いただけますと助かります。"))}}class N extends e.Component{render(){return e.createElement(e.Fragment,null,e.createElement("q",{className:A.quote},"ヘボン式ローマ字（ヘボンしきローマじ、英: Hepburn romanization）は、日本語表記をラテン文字表記に転写する際の規則、いわゆるローマ字の複数ある表記法のうち、日本国内および国外で最も広く利用されている方式である。 ジェームス・カーティス・ヘボン（James Curtis Hepburn）によって考案された。日本語の発音とラテン語の発音とが似ており、ラテン文字をラテン語読みするという前提で五十音図のように規則的に並べさえすれば日本語の発音（読み）をかなり正確に表現できることを利用した。"),e.createElement("p",{className:A.author},e.createElement("a",{href:"https://ja.wikipedia.org/wiki/ヘボン式ローマ字",target:"_blank",rel:"noopener noreferrer"},"Wikipediaより引用（最終更新 2022年6月27日 (月) 01:28）")))}}var P,R=n(9669),T=n.n(R),z=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function l(e){try{u(r.next(e))}catch(e){o(e)}}function i(e){try{u(r.throw(e))}catch(e){o(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,i)}u((r=r.apply(e,t||[])).next())}))};class L{fetch(){return z(this,void 0,void 0,(function*(){return yield T().get("./spells.json").then((e=>e.data))}))}}class I{constructor(){this.toM="ばびぶべぼまみむめもぱぴぷぺぽ",this.small="ぁぃぇぉゃゅょ",this.toT=["ち","ちゃ","ちゅ","ちょ"],(new L).fetch().then((e=>this.spells=e))}changeCase(e,t){return t?e.toLowerCase():e.toUpperCase()}translate(e){const t=e.replace(/[\u30a1-\u30f6]/g,(e=>String.fromCharCode(e.charCodeAt(0)-96))),n=t.split(""),r=[];n.map(((e,a)=>{var o,l,i,u,s,c,f,d,p,h;const m=null!==(i=null===(l=null===(o=this.spells)||void 0===o?void 0:o[e])||void 0===l?void 0:l[0])&&void 0!==i?i:"";if(!(a in r))if(r.push(m),(null===(s=null===(u=this.toM)||void 0===u?void 0:u.split(""))||void 0===s?void 0:s.includes(e))&&"ん"===(null==n?void 0:n[a-1])&&(r[a-1]="M"),this.small.split("").includes(e)){const o=`${null==n?void 0:n[a-1]}${e}`,l=null!==(d=null===(f=null===(c=this.spells)||void 0===c?void 0:c[o])||void 0===f?void 0:f[0])&&void 0!==d?d:"";let i=l;"っ"===(null==t?void 0:t[a-2])&&(i=this.toT.includes(o)?`T${l}`:`${null!==(p=null==l?void 0:l.charAt(0))&&void 0!==p?p:""}${l}`),r[a-1]=i}else"っ"===(null==t?void 0:t[a-1])&&(r[a]=`${null!==(h=null==m?void 0:m.charAt(0))&&void 0!==h?h:""}${m}`)}));return r.join("").replaceAll(/OO(?=[A-Z])/g,"O").replaceAll("UU","U").replaceAll(/(?!N)(OU)(?!E)/g,"O")}}S.ZP.initialize("G-FB9FGN6TC8"),S.ZP.send("pageview");class B extends e.Component{constructor(t){super(t),this.input=e.createRef(),this.useCase=new I,this.state={result:"",isLower:!1,message:""}}transrate(e){const t=this.useCase.translate(e);this.setState({result:this.state.isLower?t.toLowerCase():t})}toLower(e){const t=this.useCase.changeCase(this.state.result,e);this.setState({result:t,isLower:e})}copy(){var e;null===(e=this.input.current)||void 0===e||e.select(),document.execCommand("copy"),this.setState({message:"変換結果をコピーしました。"}),setTimeout((()=>{this.setState({message:""})}),1500)}render(){return e.createElement("div",{className:A.container},e.createElement("h1",{className:A.header},"ヘボン式ローマ字変換"),this.state.message?e.createElement("p",{className:A.message},this.state.message):null,e.createElement("div",{className:A.boxWrapper},e.createElement("div",{className:A.wrapper},e.createElement("form",{className:A.left},e.createElement("textarea",{autoFocus:!0,placeholder:"ひらがな・カタカナを入力すると右側に変換結果が表示されます。\n例：やまだ　たろう",onChange:e=>{this.transrate(e.target.value)}}),e.createElement(C,{label:"Clean",type:"reset",onClick:()=>this.setState({result:""}),icon:"clean"}))),e.createElement("div",{className:A.arrow},e.createElement(r,null)),e.createElement("div",{className:A.wrapper},e.createElement("div",{className:A.right},this.state.result?this.state.result:e.createElement("p",{className:A.empty},"変換結果が表示されます。",e.createElement("br",null),"例：YAMADA TARO"),e.createElement("input",{type:"text",className:A.none,ref:this.input,defaultValue:this.state.result}),e.createElement(C,{type:"button",label:"Copy",onClick:()=>this.copy(),icon:"file"})),e.createElement(x,{label:"小文字",onChange:e=>this.toLower(e)}))),e.createElement("div",{className:A.headingWrapper},e.createElement(w,{id:"about",text:"ヘボン式ローマ字とは？"}),e.createElement(N,null)),e.createElement("div",{className:A.headingWrapper},e.createElement(w,{id:"table",text:"ヘボン式ローマ字綴方一覧表"}),e.createElement(E,null)),e.createElement("div",{className:A.headingWrapper},e.createElement(w,{id:"rule",text:"変換ルール"}),e.createElement(_,null)),e.createElement("div",{className:A.headingWrapper},e.createElement(w,{id:"note",text:"注意点"}),e.createElement(O,null)))}}function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},U.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(P||(P={}));var M=function(e){return e};var F="beforeunload",D="popstate";function j(e){e.preventDefault(),e.returnValue=""}function H(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function W(){return Math.random().toString(36).substr(2,8)}function V(e){var t=e.pathname,n=void 0===t?"/":t,r=e.search,a=void 0===r?"":r,o=e.hash,l=void 0===o?"":o;return a&&"?"!==a&&(n+="?"===a.charAt(0)?a:"?"+a),l&&"#"!==l&&(n+="#"===l.charAt(0)?l:"#"+l),n}function q(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}
/**
 * React Router v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
const $=(0,e.createContext)(null);const Q=(0,e.createContext)(null);function G(e,t){if(!e)throw new Error(t)}function Z(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=e.charAt(t.length);return n&&"/"!==n?null:e.slice(t.length)||"/"}const K=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/");function Y(){return null!=(0,e.useContext)(Q)}function J(t){let{basename:n="/",children:r=null,location:a,navigationType:o=P.Pop,navigator:l,static:i=!1}=t;Y()&&G(!1);let u=K(n),s=(0,e.useMemo)((()=>({basename:u,navigator:l,static:i})),[u,l,i]);"string"==typeof a&&(a=q(a));let{pathname:c="/",search:f="",hash:d="",state:p=null,key:h="default"}=a,m=(0,e.useMemo)((()=>{let e=Z(c,u);return null==e?null:{pathname:e,search:f,hash:d,state:p,key:h}}),[u,c,f,d,p,h]);return null==m?null:(0,e.createElement)($.Provider,{value:s},(0,e.createElement)(Q.Provider,{children:r,value:{location:m,navigationType:o}}))}const X=document.getElementById("app");X&&(0,t.s)(X).render(e.createElement((function(t){let{basename:n,children:r,window:a}=t,o=(0,e.useRef)();null==o.current&&(o.current=function(e){void 0===e&&(e={});var t=e.window,n=void 0===t?document.defaultView:t,r=n.history;function a(){var e=n.location,t=e.pathname,a=e.search,o=e.hash,l=r.state||{};return[l.idx,M({pathname:t,search:a,hash:o,state:l.usr||null,key:l.key||"default"})]}var o=null;n.addEventListener(D,(function(){if(o)f.call(o),o=null;else{var e=P.Pop,t=a(),n=t[0],r=t[1];if(f.length){if(null!=n){var l=u-n;l&&(o={action:e,location:r,retry:function(){v(-1*l)}},v(l))}}else g(e)}}));var l=P.Pop,i=a(),u=i[0],s=i[1],c=H(),f=H();function d(e){return"string"==typeof e?e:V(e)}function p(e,t){return void 0===t&&(t=null),M(U({pathname:s.pathname,hash:"",search:""},"string"==typeof e?q(e):e,{state:t,key:W()}))}function h(e,t){return[{usr:e.state,key:e.key,idx:t},d(e)]}function m(e,t,n){return!f.length||(f.call({action:e,location:t,retry:n}),!1)}function g(e){l=e;var t=a();u=t[0],s=t[1],c.call({action:l,location:s})}function v(e){r.go(e)}null==u&&(u=0,r.replaceState(U({},r.state,{idx:u}),""));var y={get action(){return l},get location(){return s},createHref:d,push:function e(t,a){var o=P.Push,l=p(t,a);if(m(o,l,(function(){e(t,a)}))){var i=h(l,u+1),s=i[0],c=i[1];try{r.pushState(s,"",c)}catch(e){n.location.assign(c)}g(o)}},replace:function e(t,n){var a=P.Replace,o=p(t,n);if(m(a,o,(function(){e(t,n)}))){var l=h(o,u),i=l[0],s=l[1];r.replaceState(i,"",s),g(a)}},go:v,back:function(){v(-1)},forward:function(){v(1)},listen:function(e){return c.push(e)},block:function(e){var t=f.push(e);return 1===f.length&&n.addEventListener(F,j),function(){t(),f.length||n.removeEventListener(F,j)}}};return y}({window:a}));let l=o.current,[i,u]=(0,e.useState)({action:l.action,location:l.location});return(0,e.useLayoutEffect)((()=>l.listen(u)),[l]),(0,e.createElement)(J,{basename:n,children:r,location:i.location,navigationType:i.action,navigator:l})}),null,e.createElement(B,null)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,